KSTATE: equ 0x5c00
KSTATE4: equ 0x5c04
LAST_K: equ 0x5c08
REPDEL: equ 0x5c09
REPPER: equ 0x5c0a
CHARS: equ 0x5c36
;ERR_NR: equ 23610
ERR_SP: equ 0x5c3d
NEWPPC: equ 0x5c42
;NSPPC: equ 0x5c44
BORDCR: equ 0x5c48
;E_PPC: equ 23625
VARS: equ 0x5c4b
;PROG: equ 23635
E_LINE: equ 0x5c59
CH_ADD: equ 0x5c5d
X_PTR: equ 0x5c5f
WORKSP: equ 0x5c61
STKBOT: equ 0x5c63
STKEND: equ 0x5c65
FRAMES: equ 0x5c78
;DFCCL: equ 23686
;MEMBOT: equ 23698
NMIADD: equ 0x5cb0

; THE 'START'

; The maskable interrupt is disabled and the DE register
; pair set to hold the 'top of possible RAM'.

    di
    xor a
    ld de,0xffff
    jp start_new

; THE 'ERROR' RESTART
; The error pointer is made to point to the position of the error.

;error_1:
    ld hl,(CH_ADD)
    ld (X_PTR),hl
    jr error_2
;print_a_1:
    jp print_a_2
    db 0xff,0xff,0xff,0xff,0xff
;get_char:
    ld hl,(CH_ADD)
    ld a,(hl)
test_char:
    call skip_over
    ret nc
;next_char:
    call ch_add_1
    jr test_char
    db 0xff,0xff,0xff
;fp_calc:
    jp calculate
    db 0xff,0xff,0xff,0xff,0xff
;bc_spaces:
    push bc
    ld hl,(WORKSP)
    push hl
    jp reserve

; THE 'MASKABLE INTERRUPT' ROUTINE
; The real time clock is incremented and the keyboard
; scanned whenever a maskable interrupt occurs.

;mask_int:
    push af
    push hl
    ld hl, (FRAMES)
    inc hl
    ld (FRAMES),hl
    ld a,h
    or l
    jr nz, key_int
    inc (iy+64)
key_int:
    push bc
    push de
    call keyboard
    pop de
    pop bc
    pop hl
    pop af
    ei
    ret
error_2:
    pop hl
    ld l, (hl)
error_3:
    ld (iy+0),l
    ld sp, (ERR_SP)
    jp set_stk
    db 0xff,0xff,0xff,0xff,0xff,0xff,0xff
;reset:
    push af
    push hl
    ld hl,(NMIADD)
    ld a,h
    or l
    jr nz,no_reset
    jp (hl)
no_reset:
    pop hl
    pop af
    retn
ch_add_1:
    ld hl,(CH_ADD)
    inc hl
    ld (CH_ADD),hl
    ld a,(hl)
    ret
skip_over:
    cp 0x21
    ret nc
    cp 0x0d
    ret z
    cp 0x10
    ret c
    cp 0x18
    ccf
    ret c
    inc hl
    cp 0x16
    jr c,skips
    inc hl
skips:
    scf
    ld (CH_ADD),hl
    ret
db 0xbf
db 'RN',0xc4
db 'INKEY',0xa4
db 'P',0xc9
db 'F',0xce
db 'POIN',0xd4
db 'SCREEN',0xa4
db 'ATT',0xd2
db 'A',0xd4
db 'TA',0xc2
db 'VAL',0xa4
db 'COD',0xc5
db 'VA',0xcc
db 'LE',0xce
db 'SI',0xce
db 'CO',0xd3
db 'TA',0xce
db 'AS',0xce
db 'AC',0xd3
db 'AT',0xce
db 'L',0xce
db 'EX',0xd0
db 'IN',0xd4
db 'SQ',0xd2
db 'SG',0xce
db 'AB',0xd3
db 'PEE',0xcb
db 'I',0xce
db 'US',0xd2
db 'STR',0xa4
db 'CHR',0xa4
db 'NO',0xd4
db 'BI',0xce
db 'O',0xd2
db 'AN',0xc4
db 0x3c,0xbd,0x3e,0xbd,0x3c,0xbe
db 'LIN',0xc5
db 'THE',0xce
db 'T',0xcf
db 'STE',0xd0
db 'DEF F',0xce
db 'CA',0xd4
db 'FORMA',0xd4
db 'MOV',0xc5
db 'ERAS',0xc5
db 'OPEN ',0xa3
db 'CLOSE ',0xa3
db 'MERG',0xc5
db 'VERIF',0xd9
db 'BEE',0xd0
db 'CIRCL',0xc5
db 'IN',0xcb
db 'PAPE',0xd2
db 'FLAS',0xc8
db 'BRIGH',0xd4
db 'INVERS',0xc5
db 'OVE',0xd2
db 'OU',0xd4
db 'LPRIN',0xd4
db 'LLIS',0xd4
db 'STO',0xd0
db 'REA',0xc4
db 'DAT',0xc1
db 'RESTOR',0xc5
db 'NE',0xd7
db 'BORDE',0xd2
db 'CONTINU',0xc5
db 'DI',0xcd
db 'RE',0xcd
db 'FO',0xd2
db 'GO T',0xcf
db 'GO SU',0xc2
db 'INPU',0xd4
db 'LOA',0xc4
db 'LIS',0xd4
db 'LE',0xd4
db 'PAUS',0xc5
db 'NEX',0xd4
db 'POK',0xc5
db 'PRIN',0xd4
db 'PLO',0xd4
db 'RU',0xce
db 'SAV',0xc5
db 'RANDOMIZ',0xc5
db 'I',0xc6
db 'CL',0xd3
db 'DRA',0xd7
db 'CLEA',0xd2
db 'RETUR',0xce
db 'COP',0xd9

db 'BHY65TGV'
db 'NJU74RFC'
db 'MKI83EDX'
db 0x0e,'LO92WSZ'
db ' \rP01QA'

db 0xe3
db 0xc4,0xe0,0xe4
db 0xb4,0xbc,0xbd,0xbb,0xaf,0xb0,0xb1,0xc0,0xa7,0xa6,0xbe,0xad,0xb2,0xba,0xe5,0xa5
db 0xc2,0xe1,0xb3,0xb9,0xc1,0xb8

db 0x7e,0xdc,0xda,0x5c,0xb7,0x7b,0x7d,0xd8,0xbf,0xae
db 0xaa,0xab,0xdd,0xde,0xdf,0x7f,0xb5,0xd6,0x7c,0xd5,0x5d,0xdb,0xb6,0xd9,0x5b,0xd7

db 0x0c,0x07
db 0x06,0x04,0x05,0x08,0x0a,0x0b,0x09,0x0f

db 0xe2,0x2a,0x3f,0xcd,0xc8,0xcc
db 0xcb,0x5e,0xac,0x2d,0x2b,0x3d,0x2e,0x2c,0x3b,0x22,0xc7,0x3c,0xc3,0x3e,0xc5,0x2f
db 0xc9,0x60,0xc6,0x3a

db 0xd0,0xce,0xa8,0xca,0xd3,0xd4,0xd1,0xd2,0xa9,0xcf

key_scan:
    ld l,0x2f
    ld de,0xffff
    ld bc,0xfefe
key_line:
    in a,(c)
    cpl
    and 0x1f
    jr z,key_done
    ld h,a
    ld a,l
key_3keys:
    inc d
    ret nz
key_bits:
    sub 0x08
    srl h
    jr nc,key_bits
    ld d,e
    ld e,a
    jr nz,key_3keys
key_done:
    dec l
    rlc b
    jr c,key_line
    ld a,d
    inc a
    ret z
    cp 0x28
    ret z
    cp 0x19
    ret z
    ld a,e
    ld e,d
    ld d,a
    cp 0x18
    ret

; THE 'KEYBOARD' SUBROUTINE
; This subroutine is called on every occasion that a maskable
; interrupt occurs. In normal operation this will happen once every 20 ms. 
; The purpose of this subroutine is to scan the keyboard and decode the key
; value. The code produced will, if the 'repeat' status allows it, 
; be passed to the system variable LAST-K. When a code is put into this
; system variable bit 5 of FLAGS is set to show that a 'new' key 
; has been pressed.

keyboard:
    call key_scan
    ret nz
    ld hl,KSTATE
k_st_loop:
    bit 7,(hl)
    jr nz,k_ch_set
    inc hl
    dec (hl)
    dec hl
    jr nz,k_ch_set
    ld (hl),0xff

; After considering the first set change the pointer and consider the second set.

k_ch_set:
    ld a,l
    ld hl,KSTATE4
    cp l
    jr nz,k_st_loop

; Return now if the key value indicates 'no-key' or a shift key only.

    call k_test
    ret nc

; A key stroke that is being repeated (held down) is now separated from a new key stroke

    ld hl,KSTATE
    cp (hl)
    jr z,k_repeat
    ex de,hl
    ld hl,KSTATE4
    cp (hl)
    jr z,k_repeat

; But a new key will not be accepted unless one of
; the sets of KSTATE system variables is 'free'.

    bit 7,(hl)
    jr nz,k_new
    ex de,hl
    bit 7,(hl)
    ret z

; The new key is to be accepted. But before the system variable LAST-K
; can be filled, the KSTATE system variables, of the set being
; used, have to be initialised to handle any repeats and the key's
; code has to be decoded.

k_new:
    ld e,a
    ld (hl),a
    inc hl
    ld (hl),0x05
    inc hl
    ld a,(REPDEL)
    ld (hl),a
    inc hl

; The decoding of a 'main code' depends upon the present
; state of MODE, bit 3 of FLAGS and the 'shift byte

    ld c,(iy+7)
    ld d,(iy+1)
    push hl
    call k_decode
    pop hl
    ld (hl),a
k_end:
    ld (LAST_K),a
    set 5,(iy+1)
    ret
k_repeat:
    inc hl
    ld (hl),0x05
    inc hl
    dec (hl)
    ret nz
    ld a,(REPPER)
    ld (hl),a
    inc hl
    ld a,(hl)
    jr k_end

; THE 'K-TEST' SUBROUTINE
; The key value is tested and a return made if 'no-key' or 'shift-only';
; otherwise the 'main code' for that key is found.

k_test:
    ld b,d
    ld d,0x00
    ld a,e
    cp 0x27
    ret nc
    cp 0x18
    jr nz,k_main
    bit 7,b
    ret nz

; The 'main code' is found by indexing into the main key table.

k_main:
    ld hl,0x205
    add hl,de
    ld a,(hl)
    scf
    ret

; THE 'KEYBOARD DECODING' SUBROUTINE
; This subroutine is entered with 
; the 'main code' in the E register, the value of FLAGS in the D register,
; the value of MODE in the C 
; register and the 'shift byte' in the B register.
; By considering these four values and referring, as necessary, to the
; six key tables a 'final code' is produced. This is returned in the A 
; register.

k_decode:
    ld a,e
    cp 0x3a
    jr c,k_digit
    dec c
    jp m,k_klc_let
    jr z,k_e_let

; Only 'graphics' mode remains and the 'final code' for letter
; keys in graphics mode is computed from the 'main code'.

    add a,0x4f
    ret

; Letter keys in extended mode are considered next.

k_e_let:
    ld hl,0x1eb
    inc b
    jr z,k_look_up
    ld hl,0x205
k_look_up:
    ld d,0x00
    add hl,de
    ld a,(hl)
    ret
k_klc_let:
    ld hl,0x229
    bit 0,b
    jr z,k_look_up
    bit 3,d
    jr z,k_tokens
    bit 3,(iy+48)
    ret nz
    inc b
    ret nz
    add a,0x20
    ret

; The 'final code' values for tokens are found by adding +A5 to the 'main code'.

k_tokens:
    add a,0xa5
    ret

; Next the digit keys; and SPACE, ENTER & both shifts; are considered.

k_digit:
    cp 0x30
    ret c
    dec c
    jp m,k_klc_dgt
    jr nz,k_gra_dgt
    ld hl,0x254
    bit 5,b
    jr z,k_look_up
    cp 0x38
    jr nc,k_8_and_9

; The digit keys '0' to '7' in extended mode are to give either
; a 'paper colour code' or an 'ink colour code' depending on the use of the 
; CAPS SHIFT.

    sub 0x20
    inc b
    ret z
    add a,0x08
    ret

; The digit keys '8' and '9' are to give 'BRIGHT' & 'FLASH' codes.

k_8_and_9:
    sub 0x36
    inc b
    ret z
    add a,0xfe
    ret

; The digit keys in graphics mode are to give the block graphic
; characters (+80 to +8F), the GRAPHICS code (+0F) and the DELETE
; code (+0C).

k_gra_dgt:
    ld hl,0x230
    cp 0x39
    jr z,k_look_up
    cp 0x30
    jr z,k_look_up
    and 0x07
    add a,0x80
    inc b
    ret z
    xor 0x0f
    ret

; Finally consider the digit keys in 'K', 'L' & 'C' modes.

k_klc_dgt:
    inc b
    ret z
    bit 5,b
    ld hl,0x0230
    jr nz,k_look_up

; The codes for the various digit keys and SYMBOL SHIFT can now be found.

    sub 0x10
    cp 0x22
    jr z,k_at_char
    cp 0x20
    ret nz
    ld a,0x5f
    ret
k_at_char:
    ld a,0x40
    ret

; THE LOUDSPEAKER ROUTINES

; THE 'BEEPER' SUBROUTINE

beeper:
    di
    ld a,l
    srl l
    srl l
    cpl
    and 3
    ld c,a
    ld b,0
    ld ix,0x03d1
    add ix,bc
    ld a,(BORDCR)
    and 0x38
    rrca
    rrca
    rrca
    or 0x08

; Now enter the sound generation loop. 'DE' complete passes are made, i.e. a
; pass for each cycle of the note.
; The HL register holds the 'length of the timing loop' with '16' T states
; being used for each '1' in the L register and '1,024' T states for
; each '1' in the H register.

    nop
    nop
    nop
    inc b
    inc c
be_h_and_l_lp:
    dec c
    jr nz,be_h_and_l_lp
    ld c,0x3f
    dec b
    jp nz,be_h_and_l_lp

; The loudspeaker is now alternately activated and deactivated.

    xor 0x10
    out (0xfe),a
    ld b,h
    ld c,a
    bit 4,a
    jr nz,be_again

; After a full cycle the DE register pair is tested.

    ld a,d
    or e
    jr z,be_end
    ld a,c
    ld c,l
    dec de
    jp (ix)

; The parameters for the second half-cycle are set up.

be_again:
    ld c,l
    inc c
    jp (ix)
be_end:
    ei
    ret

; THE 'BEEP' COMMAND ROUTINE

; The subroutine is entered with two numbers on the calculator stack. The
; topmost number represents the 'pitch' of the note and the number
; underneath it represents the 'duration'.

beep:
    rst 0x28
    db 0x31,0x27,0xc0,0x03,0x34,0xec,0x6c
    db 0x98,0x1f,0xf5,0x04,0xa1,0x0f,0x38

; Now perform several tests on I, the integer part of the 'pitch'.

    ld hl,0x5c92
    ld a,(hl)
    and a
    jr nz,report_bb
    inc hl
    ld c,(hl)
    inc hl
    ld b,(hl)
    ld a,b
    rla
    sbc a,a
    cp c
    jr nz,report_bb
    inc hl
    cp (hl)
    jr nz,report_bb
    ld a,b
    add a,0x3c
    jp p,be_i_ok
    jp po,report_bb

; Note: The range +70 to +127 will be rejected later on.

; The correct frequency for the 'pitch' i can now be found.

be_i_ok:
    ld b,0xfa
be_octave:
    inc b
    sub 0x0c
    jr nc,be_octave
    add a,0x0c
    push bc
    ld hl,0x046e
    call loc_mem
    call stack_num

; Now the fractional part of the 'pitch' can be taken into consideration.

    rst 0x28
    db 0x04,0x38

; The final frequency f is found by modifying
; the 'last value' according to the octave number.

    pop af
    add a,(hl)
    ld (hl),a
    rst 0x28
    db 0xc0,0x02

; Attention is now turned to the 'duration'.

    db 0x31,0x38
    call find_int1
    cp 0x0b
    jr nc,report_bb

; The number of complete cycles in the 'beep' is
; given by 'f*t' so this value is now found.

    rst 0x28
    db 0xe0,0x04

; The result is left on the calculator stack whilst the length
; of the 'timing loop' required for the 'beep' is computed;

    db 0xe0,0x34,0x80
    db 0x43,0x55,0x9f,0x80,0x01,0x05,0x34,0x35,0x71,0x03,0x38

; Note: The value '437,500/f' gives the 'half-cycle' length of the note
; and reducing it by '30.125' allows for '120.5' T states in which to 
; actually produce the note and adjust the counters etc.
; The values can now be transferred to the required registers

    call find_int2
    push bc

; Note: If the timing loop value is too large then an error will
; occur (returning via ERROR-1); thereby excluding 'pitch' values of '+70 to +127'.

    call find_int2
    pop hl
    ld d,b
    ld e,c

; However before making the 'beep' test the value 'f*t'
    ld a,d
    or e
    ret z
    dec de
    jp beeper

; Report B - integer out of range

report_bb:
    rst 0x08
    db 0x0a

; THE 'SEMI-TONE' TABLE
; This table holds the frequencies of the twelve semi-tones in an octave.

db 0x89,0x02,0xd0,0x12,0x86
db 0x89,0x0a,0x97,0x60,0x75
db 0x89,0x12,0xd5,0x17,0x1f
db 0x89,0x1b,0x90,0x41,0x02
db 0x89,0x24,0xd0,0x53,0xca
db 0x89,0x2e,0x9d,0x36,0xb1
db 0x89,0x38,0xff,0x49,0x3e
db 0x89,0x43,0xff,0x6a,0x73
db 0x89,0x4f,0xa7,0x00,0x54
db 0x89,0x5c,0x00,0x00,0x00
db 0x89,0x69,0x14,0xf6,0x24
db 0x89,0x76,0xf1,0x10,0x05

; THE 'PROGRAM NAME' SUBROUTINE (ZX81)
; The following subroutine applies to the ZX81 and was not removed when the 
; program was rewritten for the SPECTRUM.
db 0xcd,0xfb,0x24,0x3a
db 0x3b,0x5c
db 0x87,0xfa
db 0x8a,0x1c,0xe1,0xd0
db 0xe5,0xcd,0xf1,0x2b
db 0x62,0x6b,0x0d,0xf8
db 0x09,0xcb
db 0xfe,0xc9

; THE CASSETTE HANDLING ROUTINES

; The 16K monitor program has an extensive set of routines for handling
; the cassette interface. In effect these routines form the SAVE.
; LOAD, VERIFY & MERGE command routines.
; The entry point to the routines is at SAVE-ETC (0605). However before
; this point are the subroutines concerned with the actual
; SAVEing and LOADing (or VERIFYing) of bytes.
; In all cases the bytes to be handled by these subroutines are described
; by the DE register pair holding the 'length' of the block, the IX
; register pair holding the 'base address' and the A register holding +00
; for a header block, or +FF for a program/data block.

; THE 'SA-BYTES' SUBROUTINE
; This subroutine is called to SAVE the header information (from 09BA) and
; later the actual program/data block (from 099E).

sa_bytes:
    ld hl,0x053f
    push hl
    ld hl,0x1f80
    bit 7,a
    jr z,sa_flag
    db 0x21,0x98,0x0c
sa_flag:
    ex af,af'
    inc de
    dec ix
    di
    ld a,2
    ld b,a

; A loop is now entered to create the pulses of the leader. Both
; the 'MIC on' and the 'MIC off' pulses are 2,168 T states in length. The
; colour of the border changes from RED to CYAN with each 'edge'.

; Note: An 'edge' will be a transition either from 'on' to 'off', or
; from 'off' to 'on'.

sa_leader:
    djnz sa_leader
    out (0xfe),a
    xor 0x0f
    ld b,0xa4
    dec l
    jr nz,sa_leader
    dec b
    dec h
    jp p,sa_leader

; A sync pulse is now sent.

    ld b,0x2f
sa_sync_1:
    djnz sa_sync_1
    out (0xfe),a
    ld a,0x0d
    ld b,0x37
sa_sync_2:
    djnz sa_sync_2
    out (0xfe),a

; The header v. program/data flag will be the first byte to be SAVEd.

    ld bc,0x3b0e
    ex af,af'
    ld l,a
    jp sa_start

; The byte SAVEing loop is now entered. The first byte to be SAVEd is the
; flag; this is followed by the actual data byte and the final byte
; sent is the parity byte that is built up by considering the values of
; all the earlier bytes.

sa_loop:
    ld a,d
    or e
    jr z,sa_parity
    ld l,(ix+0)
sa_loop_p:
    ld a,h
    xor l
sa_start:
    ld h,a
    ld a,1
    scf
    jp sa_8_bits

; When it is time to send the 'parity' byte then it
; is transferred to the L register for SAVEing.

sa_parity:
    ld l,h
    jr sa_loop_p

; The following inner loop produces the actual pulses. The loop is entered
; at SA-BIT-1 with the type of the bit to be SAVEd indicated by
; the carry flag. Two passes of the loop are made for each bit thereby
; making an 'off pulse' and an 'on pulse'. The pulses for a reset bit
; are shorter by 855 T states.

sa_bit_2:
    ld a,c
    bit 7,b
sa_bit_1:
    djnz sa_bit_1
    jr nc,sa_out
    ld b,0x42
sa_set:
    djnz sa_set
sa_out:
    out (0xfe),a
    ld b,0x3e
    jr nz,sa_bit_2
    dec b
    xor a
    inc a
sa_8_bits:
    rl l
    jp nz,sa_bit_1
    dec de
    inc ix
    ld b,0x31
    ld a,0x7f
    in a,(0xfe)
    rra
    ret nc
    ld a,d
    inc a
    jp nz,sa_loop
    ld b,0x3b
sa_delay:
    djnz sa_delay
    ret
    push af
    ld a,(BORDCR)
    and 0x38
    rrca
    rrca
    rrca
    out (0xfe),a
    ld a,0x7f
    in a,(0xfe)
    rra
    ei
    jr c,ld_end
    rst 8
    inc c
ld_end:
    pop af
    ret
    inc d
    ex af,af'
    dec d
    di
    ld a,0x0f
    out (0xfe),a
    db 0x21,0x3f
    db 0x05,0xe5,0xdb,0xfe,0x1f,0xe6,0x20,0xf6,0x02,0x4f,0xbf
ld_break:
    ret nz
ld_start:
    call ld_edge_1
    jr nc,ld_break

; The next stage involves waiting a while and
; then showing that the signal is still pulsing.

    ld hl,0x415
ld_wait:
    djnz ld_wait
    dec hl
    ld a,h
    or l
    jr nz,ld_wait
    call ld_edge_2
    jr nc,ld_break

; Now accept only a 'leader signal'.

ld_leader:
    ld b,0x9c
    call ld_edge_2
    jr nc,ld_break
    ld a,0xc6
    cp b
    jr nc,ld_start
    inc h
    jr nz,ld_leader

; After the leader come the 'off' and 'on' part's of the sync pulse.

ld_sync:
    ld b,0xc9
    call ld_edge_1
    jr nc,ld_break
    ld a,b
    cp 0xd4
    jr nc,ld_sync
    call ld_edge_1
    ret nc

; The bytes of the header or the program/data block can now be
; LOADed or VERIFied. But the first byte is the type flag.

    ld a,c
    xor 3
    ld c,a
    ld h,0
    ld b,0xb0
    db 0x18,0x1f
ld_loop:
    ex af,af'
    jr nz,ld_flag
    ;jr nc,ld_verify
    db 0x30,0x0f
    ld (ix+0),l
    db 0x18,0x0f
ld_flag:
    rl c
    db 0xad,0xc0,0x79,0x1f,0x4f,0x13,0x18,0x07,0xdd,0x7e,0x00
    db 0xad,0xc0,0xdd,0x23,0x1b,0x08,0x06,0xb2,0x2e,0x01

; The 'LD-8-BITS' loop is used to build up a byte in the L register.

ld_8_bits:
    call ld_edge_2
    ret nc
    ld a,0xcb
    cp b
    rl l
    ld b,0xb0
    jp nc,ld_8_bits

; The 'parity matching' byte has to be updated with each new byte.

    ld a,h
    xor l
    db 0x67,0x7a,0xb3,0x20,0xca,0x7c
    db 0xfe,0x01,0xc9

; THE 'LD-EDGE-2' AND 'LD-EDGE-1' SUBROUTINES

ld_edge_2:
    call ld_edge_1
    ret nc
ld_edge_1:
    ld a,0x16
ld_delay:
    dec a
    jr nz,ld_delay
    and a

; The sampling loop is now entered. The value in the B register is
; incremented for each pass; 'time-up' is given when B reaches zero.

ld_sample:
    inc b
    ret z
    ld a,0x7f
    in a,(0xfe)
    rra
    ret nc
    xor c
    and 0x20
    jr z,ld_sample

; A new 'edge' has been found within the time period allowed for
; the search. So change the border colour and set the carry flag.

    ld a,c
    cpl
    ld c,a
    and 0x07
    or 0x08
    out (0xfe),a
    scf
    ret

; THE 'SAVE, LOAD, VERIFY & MERGE' COMMAND ROUTINES
; The entry point SAVE-ETC is used for all four commands. The value held
; in T-ADDR however distinguishes between the four commands. The first
; part of the following routine is concerned with the construction of
; the 'header information' in the work space.

save_etc:
    pop af
    ld a,(0x5c74)
    sub 0xe0
    ld (0x5c74),a
    db 0xcd,0x8c,0x1c
    db 0xcd,0x30,0x25
    db 0x28,0x3c
    ld bc,0x0011
    ld a,(0x5c74)
    and a
    jr z,sa_space
    ld c,0x22
sa_space:
    rst 0x30
    push de
    pop ix
    ld b,0x0b
    ld a,0x20
sa_blank:
    ld (de),a
    inc de
    djnz sa_blank
    ld (ix+1),0xff
    db 0xcd,0xf1,0x2b
    ld hl,0xfff6
    dec bc
    add hl,bc
    inc bc
    jr nc,sa_name
    ld a,(0x5c74)
    and a
    jr nz,sa_null

; Report F - Invalid file name

report_f:
    rst 0x08
    db 0x0e

; Continue to handle the name of the program.

sa_null:
    ld a,b
    or c
    jr z,sa_data
    db 0x01,0x0a,0x00

; The name is now transferred to the work space (second location onwards).

sa_name:
    push ix
    pop hl
    inc hl
    ex de,hl
    ldir

; The many different parameters, if any, that follow the command
; are now considered. Start by handling 'xxx "name" DATA'.

sa_data:
    rst 0x18
    cp 0xe4
    db 0x20,0x49
    ld a,(0x5c74)
    cp 0x03
    db 0xca,0x8a,0x1c
    rst 0x20
    db 0xcd,0xb2,0x28
    set 7,c
    jr nc,sa_v_old
    ld hl,0
    ld a,(0x5c74)
    dec a
    jr z,sa_v_new

; Report 2 - Variable not found

report_2:
    rst 0x08
    db 0x01

; Continue with the handling of an existing array.

sa_v_old:
    db 0xc2,0x8a,0x1c
    db 0xcd,0x30,0x25
    jr z,sa_data_1
    inc hl
    ld a,(hl)
    ld (ix+11),a
    inc hl
    ld a,(hl)
    ld (ix+12),a
    inc hl

; The next part is common to both 'old' and 'new' arrays. Note: Syntax path error.

sa_v_new:
    ld (ix+14),c
    ld a,1
    bit 6,c
    jr z,sa_v_type
    inc a
sa_v_type:
    ld (ix+0),a

; The last part of the statement is examined before joining the other pathways.

sa_data_1:
    ex de,hl
    rst 0x20
    cp 0x29
    jr nz,sa_v_old
    rst 0x20
    db 0xcd,0xee,0x1b
    ex de,hl
    db 0xc3,0x5a,0x07
;sa_scr:
    cp 0xaa
    jr nz,sa_code
    ld a,(0x5c74)
    cp 3
    db 0xca,0x8a,0x1c
    rst 0x20
    db 0xcd,0xee,0x1b
    ld (ix+11),0
    ld (ix+12),0x1b
    ld hl,0x4000
    ld (ix+13),l
    ld (ix+14),h
    db 0x18,0x4d
sa_code:
    cp 0xaf
db 0x20,0x4f,0x3a,0x74,0x5c,0xfe,0x03,0xca,0x8a,0x1c,0xe7

db 0xcd,0x48,0x20

db 0x20,0x0c,0x3a,0x74,0x5c,0xa7,0xca,0x8a,0x1c

db 0xcd,0xe6,0x1c

db 0x18
db 0x0f

db 0xcd,0x82,0x1c

db 0xdf,0xfe,0x2c,0x28,0x0c,0x3a,0x74,0x5c,0xa7,0xca,0x8a,0x1c

db 0xcd,0xe6,0x1c

db 0x18,0x04,0xe7


    db 0xcd,0x82,0x1c
    db 0xcd,0xee,0x1b
    call find_int2
    ld (ix+11),c
    ld (ix+12),b
    call find_int2

db 0xdd,0x71,0x0d,0xdd,0x70,0x0e,0x60,0x69
db 0xdd,0x36,0x00,0x03,0x18,0x44,0xfe,0xca,0x28,0x09

db 0xcd,0xee,0x1b

db 0xdd,0x36,0x0e
db 0x80,0x18,0x17,0x3a,0x74,0x5c,0xa7,0xc2,0x8a,0x1c,0xe7

db 0xcd,0x82,0x1c
db 0xcd,0xee,0x1b
db 0xcd,0x99,0x1e

db 0xdd,0x71,0x0d,0xdd,0x70,0x0e,0xdd,0x36,0x00,0x00,0x2a,0x59
db 0x5c,0xed,0x5b,0x53,0x5c,0x37,0xed,0x52,0xdd,0x75,0x0b,0xdd,0x74,0x0c,0x2a,0x4b
db 0x5c,0xed,0x52,0xdd,0x75,0x0f,0xdd,0x74,0x10,0xeb,0x3a,0x74,0x5c,0xa7,0xca,0x70
db 0x09,0xe5,0x01,0x11,0x00,0xdd,0x09,0xdd,0xe5,0x11,0x11,0x00,0xaf,0x37,0xcd,0x56
db 0x05,0xdd,0xe1,0x30,0xf2,0x3e,0xfe

db 0xcd,0x01,0x16

db 0xfd,0x36,0x52,0x03,0x0e,0x80
db 0xdd,0x7e,0x00,0xdd,0xbe,0xef,0x20,0x02,0x0e,0xf6,0xfe,0x04,0x30,0xd9,0x11,0xc0
db 0x09,0xc5
db 0xcd,0x0a,0x0c
db 0xc1,0xdd,0xe5,0xd1,0x21,0xf0,0xff,0x19,0x06,0x0a,0x7e
db 0x3c,0x20,0x03,0x79,0x80,0x4f,0x13,0x1a,0xbe,0x23,0x20,0x01,0x0c,0xd7,0x10,0xf6
db 0xcb,0x79,0x20,0xb3,0x3e,0x0d,0xd7,0xe1,0xdd,0x7e,0x00,0xfe,0x03,0x28,0x0c,0x3a
db 0x74,0x5c,0x3d,0xca,0x08,0x08,0xfe,0x02,0xca,0xb6,0x08,0xe5,0xdd,0x6e,0xfa,0xdd
db 0x66,0xfb,0xdd,0x5e,0x0b,0xdd,0x56,0x0c,0x7c,0xb5,0x28,0x0d,0xed,0x52,0x38,0x26
db 0x28,0x07,0xdd,0x7e,0x00,0xfe,0x03,0x20,0x1d,0xe1,0x7c,0xb5,0x20,0x06,0xdd,0x6e
db 0x0d,0xdd,0x66,0x0e,0xe5,0xdd,0xe1,0x3a,0x74,0x5c,0xfe,0x02,0x37,0x20,0x01,0xa7
db 0x3e,0xff

db 0xcd,0x56,0x05

db 0xd8,0xcf,0x1a,0xdd,0x5e,0x0b,0xdd,0x56,0x0c,0xe5,0x7c
db 0xb5,0x20,0x06,0x13,0x13,0x13,0xeb,0x18,0x0c,0xdd,0x6e,0xfa,0xdd,0x66,0xfb,0xeb
db 0x37,0xed,0x52,0x38,0x09,0x11,0x05,0x00,0x19,0x44,0x4d,0xcd,0x05,0x1f,0xe1,0xdd
db 0x7e,0x00,0xa7,0x28,0x3e,0x7c,0xb5,0x28,0x13,0x2b,0x46,0x2b,0x4e,0x2b,0x03,0x03
db 0x03,0xdd,0x22,0x5f,0x5c
db 0xcd,0xe8,0x19
db 0xdd,0x2a,0x5f,0x5c,0x2a,0x59,0x5c,0x2b
db 0xdd,0x4e,0x0b,0xdd,0x46,0x0c,0xc5,0x03,0x03,0x03,0xdd,0x7e,0xfd,0xf5

    call make_room
    inc hl
    pop af
    ld (hl),a
    pop de
    inc hl
    ld (hl),e
    inc hl
    ld (hl),d
    inc hl
    push hl
    pop ix
    scf
    ld a,0xff
    db 0xc3,0x02,0x08

; Now deal with the LOADing of a BASIC program and its variables

ld_prog:
    ex de,hl
    ld hl,(E_LINE)
    dec hl
    ld (X_PTR),ix
    db 0xdd,0x4e,0x0b
    db 0xdd,0x46,0x0c
    push bc
    db 0xcd,0xe5,0x19
    pop bc
    push hl
    push bc
    call make_room
    ld ix,(X_PTR)
    inc hl
    ld c,(ix+15)
    ld b,(ix+16)
    add hl,bc
    ld (VARS),hl
    ld h,(ix+14)
    ld a,h
    and 0xc0
    jr nz,ld_prog_1
    ld l,(ix+13)
    ld (0x5c42),hl
    ld (iy+10),0

; The data block can now be LOADed.

ld_prog_1:
    pop de
    pop ix
    scf
    ld a,0xff
    db 0xc3,0x02,0x08
    ld c,(ix+0xb)
    ld b,(ix+0xc)
    push bc
    inc bc
    rst 0x30
    db 0x36
    db 0x80
    ex de,hl
    pop de
    push hl
    push hl
    db 0xdd,0xe1
    scf
    ld a,0xff
    db 0xcd,0x02,0x08

; The lines of the new program are MERGEd with the lines of the old program.

    pop hl
    ld de,(0x5c53)

    db 0x7e,0xe6,0xc0,0x20,0x19,0x1a,0x13,0xbe,0x23,0x20,0x02,0x1a,0xbe,0x1b
    db 0x2b,0x30,0x08,0xe5,0xeb

    db 0xcd,0xb8,0x19
    pop hl
    db 0x18,0xec
    db 0xcd,0x2c,0x09

db 0x18,0xe2
db 0x7e,0x4f,0xfe,0x80,0xc8,0xe5,0x2a,0x4b,0x5c,0x7e,0xfe,0x80,0x28,0x25,0xb9,0x28
db 0x08,0xc5,0xcd,0xb8,0x19,0xc1,0xeb,0x18,0xf0,0xe6,0xe0,0xfe,0xa0,0x20,0x12,0xd1
db 0xd5,0xe5,0x23,0x13,0x1a,0xbe,0x20,0x06,0x17,0x30,0xf7,0xe1,0x18,0x03,0xe1,0x18
db 0xe0,0x3e,0xff,0xd1,0xeb,0x3c,0x37,0xcd,0x2c,0x09,0x18,0xc4,0x20,0x10,0x08,0x22
db 0x5f,0x5c,0xeb

db 0xcd,0xb8,0x19
db 0xcd,0xe8,0x19

db 0xeb,0x2a,0x5f,0x5c,0x08,0x08,0xd5
db 0xcd,0xb8,0x19
db 0x22,0x5f,0x5c
db 0x2a
db 0x53,0x5c,0xe3,0xc5,0x08,0x38,0x07
    dec hl
db 0xcd,0x55,0x16
    inc hl
db 0x18,0x03,0xcd,0x55,0x16,0x23,0xc1,0xd1,0xed,0x53,0x53,0x5c,0xed
db 0x5b,0x5f,0x5c,0xc5,0xd5,0xeb,0xed,0xb0,0xe1,0xc1,0xd5
db 0xcd,0xe8,0x19,0xd1,0xc9
db 0xe5,0x3e,0xfd

db 0xcd,0x01,0x16

db 0xaf,0x11,0xa1,0x09
db 0xcd,0x0a,0x0c
db 0xfd,0xcb,0x02
db 0xee

db 0xcd,0xd4,0x15

db 0xdd,0xe5,0x11,0x11,0x00,0xaf

db 0xcd,0xc2,0x04

db 0xdd,0xe1,0x06
db 0x32,0x76,0x10,0xfd,0xdd,0x5e,0x0b,0xdd,0x56,0x0c,0x3e,0xff,0xdd,0xe1,0xc3,0xc2
db 0x04,0x80,0x53,0x74,0x61,0x72,0x74,0x20,0x74,0x61,0x70,0x65,0x2c,0x20,0x74,0x68
db 0x65,0x6e,0x20,0x70,0x72,0x65,0x73,0x73,0x20,0x61,0x6e,0x79,0x20,0x6b,0x65,0x79
db 0xae,0x0d,0x50,0x72,0x6f,0x67,0x72,0x61,0x6d,0x3a,0xa0,0x0d,0x4e,0x75,0x6d,0x62
db 0x65,0x72,0x20,0x61,0x72,0x72,0x61,0x79,0x3a,0xa0,0x0d,0x43,0x68,0x61,0x72,0x61
db 0x63,0x74,0x65,0x72,0x20,0x61,0x72,0x72,0x61,0x79,0x3a,0xa0,0x0d,0x42,0x79,0x74
db 0x65,0x73,0x3a,0xa0

db 0xcd,0x03,0x0b

db 0xfe,0x20,0xd2,0xd9,0x0a,0xfe,0x06,0x38,0x69
db 0xfe,0x18,0x30,0x65,0x21,0x0b,0x0a,0x5f,0x16,0x00,0x19,0x5e,0x19,0xe5,0xc3,0x03
db 0x0b,0x4e,0x57,0x10,0x29,0x54,0x53,0x52,0x37,0x50,0x4f,0x5f,0x5e,0x5d,0x5c,0x5b
db 0x5a,0x54,0x53,0x0c,0x3e,0x22,0xb9,0x20,0x11,0xfd,0xcb,0x01,0x4e,0x20,0x09,0x04
db 0x0e,0x02,0x3e,0x18,0xb8,0x20,0x03,0x05,0x0e,0x21,0xc3,0xd9,0x0d,0x3a,0x91,0x5c
db 0xf5,0xfd,0x36,0x57,0x01,0x3e,0x20,0xcd,0x65,0x0b,0xf1,0x32,0x91,0x5c,0xc9,0xfd
db 0xcb,0x01,0x4e,0xc2,0xcd,0x0e,0x0e,0x21,0xcd,0x55,0x0c,0x05,0xc3,0xd9,0x0d,0xcd
db 0x03,0x0b,0x79,0x3d,0x3d,0xe6,0x10,0x18,0x5a,0x3e,0x3f,0x18,0x6c,0x11,0x87,0x0a
db 0x32,0x0f,0x5c,0x18,0x0b,0x11,0x6d,0x0a,0x18,0x03,0x11,0x87,0x0a,0x32,0x0e,0x5c
db 0x2a,0x51,0x5c,0x73,0x23,0x72,0xc9,0x11,0xf4,0x09,0xcd,0x80,0x0a,0x2a,0x0e,0x5c
db 0x57,0x7d,0xfe,0x16,0xda,0x11,0x22,0x20,0x29,0x44,0x4a,0x3e,0x1f,0x91,0x38,0x0c
db 0xc6,0x02,0x4f,0xfd,0xcb,0x01,0x4e,0x20,0x16,0x3e,0x16,0x90,0xda,0x9f,0x1e,0x3c
db 0x47,0x04,0xfd,0xcb,0x02,0x46,0xc2,0x55,0x0c,0xfd,0xbe,0x31,0xda,0x86,0x0c,0xc3
db 0xd9,0x0d,0x7c

db 0xcd,0x03,0x0b

db 0x81,0x3d,0xe6,0x1f,0xc8,0x57,0xfd,0xcb,0x01,0xc6
db 0x3e,0x20

db 0xcd,0x3b,0x0c

db 0x15,0x20,0xf8,0xc9

db 0xcd,0x24,0x0b

db 0xfd,0xcb,0x01,0x4e
db 0x20,0x1a,0xfd,0xcb,0x02,0x46,0x20,0x08,0xed,0x43,0x88,0x5c,0x22,0x84,0x5c,0xc9
db 0xed,0x43,0x8a,0x5c,0xed,0x43,0x82,0x5c,0x22,0x86,0x5c,0xc9,0xfd,0x71,0x45,0x22
db 0x80,0x5c,0xc9,0xfd,0xcb,0x01,0x4e,0x20,0x14,0xed,0x4b,0x88,0x5c,0x2a,0x84,0x5c
db 0xfd,0xcb,0x02,0x46,0xc8,0xed,0x4b,0x8a,0x5c,0x2a,0x86,0x5c,0xc9,0xfd,0x4e,0x45
db 0x2a,0x80,0x5c,0xc9,0xfe,0x80,0x38,0x3d,0xfe,0x90,0x30,0x26,0x47,0xcd,0x38,0x0b
db 0xcd,0x03,0x0b,0x11,0x92,0x5c,0x18,0x47,0x21,0x92,0x5c,0xcd,0x3e,0x0b,0xcb,0x18
db 0x9f,0xe6,0x0f,0x4f,0xcb,0x18,0x9f,0xe6,0xf0,0xb1,0x0e,0x04,0x77,0x23,0x0d,0x20
db 0xfb,0xc9,0xd6,0xa5,0x30,0x09,0xc6,0x15,0xc5,0xed,0x4b,0x7b,0x5c,0x18,0x0b,0xcd
db 0x10,0x0c,0xc3,0x03,0x0b,0xc5,0xed,0x4b,0x36,0x5c,0xeb,0x21,0x3b,0x5c,0xcb,0x86
db 0xfe,0x20,0x20,0x02,0xcb,0xc6,0x26,0x00,0x6f,0x29,0x29,0x29,0x09,0xc1,0xeb,0x79
db 0x3d,0x3e,0x21,0x20,0x0e,0x05,0x4f,0xfd,0xcb,0x01,0x4e,0x28,0x06,0xd5,0xcd,0xcd
db 0x0e,0xd1,0x79,0xb9,0xd5,0xcc,0x55,0x0c,0xd1,0xc5,0xe5,0x3a,0x91,0x5c,0x06,0xff
db 0x1f,0x38,0x01,0x04,0x1f,0x1f,0x9f,0x4f,0x3e,0x08,0xa7,0xfd,0xcb,0x01,0x4e,0x28
db 0x05,0xfd,0xcb,0x30,0xce,0x37,0xeb,0x08,0x1a,0xa0,0xae,0xa9,0x12,0x08,0x38,0x13
db 0x14,0x23,0x3d,0x20,0xf2,0xeb,0x25,0xfd,0xcb,0x01,0x4e,0xcc,0xdb,0x0b,0xe1,0xc1
db 0x0d,0x23,0xc9,0x08,0x3e,0x20,0x83,0x5f,0x08,0x18,0xe6,0x7c
db 0x0f,0x0f,0x0f
db 0xe6
db 0x03,0xf6,0x58,0x67,0xed,0x5b,0x8f,0x5c,0x7e,0xab,0xa2,0xab,0xfd,0xcb,0x57,0x76
db 0x28,0x08,0xe6,0xc7,0xcb,0x57,0x20,0x02,0xee,0x38,0xfd,0xcb,0x57,0x66,0x28,0x08
db 0xe6,0xf8,0xcb,0x6f,0x20,0x02,0xee,0x07,0x77,0xc9,0xe5,0x26,0x00,0xe3,0x18,0x04
db 0x11,0x95,0x00,0xf5

    db 0xcd,0x41,0x0c
    db 0x38,0x09
    ld a,0x20
    bit 0,(iy+1)
    db 0xcc,0x3b,0x0c
    ld a,(de)
    and 0x7f
    db 0xcd,0x3b,0x0c
    ld a,(de)
    inc de
    db 0x87,0x30,0xf5,0xd1,0xfe,0x48
db 0x28,0x03,0xfe,0x82,0xd8,0x7a,0xfe,0x03,0xd8,0x3e,0x20,0xd5,0xd9,0xd7,0xd9,0xd1
db 0xc9,0xf5,0xeb,0x3c,0xcb,0x7e,0x23,0x28,0xfb,0x3d,0x20,0xf8,0xeb,0xf1,0xfe,0x20
db 0xd8,0x1a,0xd6,0x41,0xc9,0xfd,0xcb,0x01,0x4e,0xc0,0x11,0xd9,0x0d,0xd5,0x78,0xfd
db 0xcb,0x02,0x46,0xc2,0x02,0x0d,0xfd,0xbe,0x31,0x38,0x1b,0xc0,0xfd,0xcb,0x02,0x66
db 0x28,0x16,0xfd,0x5e,0x2d,0x1d,0x28,0x5a,0x3e,0x00,0xcd,0x01,0x16,0xed,0x7b,0x3f
db 0x5c,0xfd,0xcb,0x02,0xa6,0xc9,0xcf,0x04,0xfd,0x35,0x52,0x20,0x45,0x3e,0x18,0x90
db 0x32,0x8c,0x5c,0x2a,0x8f,0x5c,0xe5,0x3a,0x91,0x5c,0xf5,0x3e,0xfd,0xcd,0x01,0x16
db 0xaf,0x11,0xf8,0x0c,0xcd,0x0a,0x0c,0xfd,0xcb,0x02,0xee,0x21,0x3b,0x5c,0xcb,0xde
db 0xcb,0xae,0xd9,0xcd,0xd4,0x15,0xd9,0xfe,0x20,0x28,0x45,0xfe,0xe2,0x28,0x41,0xf6
db 0x20,0xfe,0x6e,0x28,0x3b,0x3e,0xfe,0xcd,0x01,0x16,0xf1,0x32,0x91,0x5c,0xe1,0x22
db 0x8f,0x5c,0xcd,0xfe,0x0d,0xfd,0x46,0x31,0x04,0x0e,0x21,0xc5,0xcd,0x9b,0x0e,0x7c
db 0x0f,0x0f,0x0f,0xe6,0x03,0xf6,0x58,0x67,0x11,0xe0,0x5a,0x1a,0x4e,0x06,0x20,0xeb
db 0x12,0x71,0x13,0x23,0x10,0xfa,0xc1,0xc9,0x80,0x73,0x63,0x72,0x6f,0x6c,0x6c,0xbf
db 0xcf,0x0c,0xfe,0x02,0x38,0x80,0xfd,0x86,0x31,0xd6,0x19,0xd0,0xed,0x44,0xc5,0x47
db 0x2a,0x8f,0x5c,0xe5,0x2a,0x91,0x5c,0xe5,0xcd,0x4d,0x0d,0x78,0xf5,0x21,0x6b,0x5c
db 0x46,0x78,0x3c,0x77,0x21,0x89,0x5c,0xbe,0x38,0x03,0x34,0x06,0x18,0xcd,0x00,0x0e
db 0xf1,0x3d,0x20,0xe8,0xe1,0xfd,0x75,0x57,0xe1,0x22,0x8f,0x5c,0xed,0x4b,0x88,0x5c
db 0xfd,0xcb,0x02,0x86,0xcd,0xd9,0x0d,0xfd,0xcb,0x02,0xc6,0xc1,0xc9,0xaf,0x2a,0x8d
db 0x5c,0xfd,0xcb,0x02,0x46,0x28,0x04,0x67,0xfd,0x6e,0x0e,0x22,0x8f,0x5c,0x21,0x91
db 0x5c,0x20,0x02,0x7e,0x0f,0xae,0xe6,0x55,0xae,0x77,0xc9,0xcd,0xaf,0x0d,0x21,0x3c
db 0x5c,0xcb,0xae,0xcb,0xc6,0xcd,0x4d,0x0d,0xfd,0x46,0x31,0xcd,0x44,0x0e,0x21,0xc0
db 0x5a,0x3a,0x8d,0x5c,0x05,0x18,0x07,0x0e,0x20,0x2b,0x77,0x0d,0x20,0xfb,0x10,0xf7
db 0xfd,0x36,0x31,0x02,0x3e,0xfd,0xcd,0x01,0x16,0x2a,0x51,0x5c,0x11,0xf4,0x09,0xa7
db 0x73,0x23,0x72,0x23,0x11,0xa8,0x10,0x3f,0x38,0xf6,0x01,0x21,0x17,0x18,0x2a,0x21
db 0x00,0x00,0x22,0x7d,0x5c,0xfd,0xcb,0x30,0x86,0xcd,0x94,0x0d,0x3e,0xfe,0xcd,0x01
db 0x16,0xcd,0x4d,0x0d,0x06,0x18,0xcd,0x44,0x0e,0x2a,0x51,0x5c,0x11,0xf4,0x09,0x73
db 0x23,0x72,0xfd,0x36,0x52,0x01,0x01,0x21,0x18,0x21,0x00,0x5b,0xfd,0xcb,0x01,0x4e
db 0x20,0x12,0x78,0xfd,0xcb,0x02,0x46,0x28,0x05,0xfd,0x86,0x31,0xd6,0x18,0xc5,0x47

db 0xcd,0x9b,0x0e

db 0xc1,0x3e,0x21,0x91,0x5f,0x16,0x00,0x19,0xc3,0xdc,0x0a,0x06,0x17

cl_scroll:
    db 0xcd,0x9b,0x0e
    ld c,8
cl_scr_1:
    push bc
    push hl
    ld a,b
    and 7
    ld a,b
    jr nz,cl_scr_3
cl_scr_2:
    ex de,hl
    db 0x21,0xe0
    db 0xf8
    add hl,de
    ex de,hl
    ld bc,0x20
    dec a
    ldir

; The pixel lines within the 'thirds' can now be scrolled. The
; A register holds, on the first pass, +01 - +07, +09 - +0F or +11 - +17.

cl_scr_3:
    ex de,hl
    ld hl,0xffe0
    add hl,de
    ex de,hl
    ld b,a
    and 0x07
    rrca
    rrca
    rrca
    ld c,a
    ld a,b
    ld b,0
    ldir
    ld b,0x07
    add hl,bc
    and 0xf8
    db 0x20,0xdb

; Now find if the loop has been used eight times - once for each pixel line.

    pop hl
    inc h
    pop bc
    dec c
    jr nz,cl_scr_1

; Next the attribute bytes are scrolled. Note that the B register still
; holds the number of lines to be scrolled and the C register holds zero.

    db 0xcd,0x88,0x0e

    ld hl,0xffe0
    add hl,de
    ex de,hl
    ldir

; It remains now to clear the bottom line of the display.

    ld b,1

; THE 'CLEAR LINES' SUBROUTINE
; This subroutine will clear the bottom 'B' lines of the display.

    push bc
    db 0xcd,0x9b,0x0e
    ld c,8

; Now enter a loop to clear all the pixel lines.

cl_line_1:
    push bc
    push hl
    ld a,b
cl_line_2:
    and 7
    rrca
    rrca
    rrca
    ld c,a
    ld a,b
    ld b,0
    dec c
    ld d,h
    ld e,l
    ld (hl),0
    inc de
    ldir
db 0x11,0x01
db 0x07,0x19,0x3d,0xe6,0xf8,0x47,0x20,0xe5,0xe1,0x24,0xc1,0x0d,0x20,0xdc,0xcd,0x88
db 0x0e,0x62,0x6b,0x13,0x3a,0x8d,0x5c,0xfd,0xcb,0x02,0x46,0x28,0x03,0x3a,0x48,0x5c
db 0x77,0x0b,0xed,0xb0,0xc1,0x0e,0x21,0xc9,0x7c,0x0f,0x0f,0x0f,0x3d,0xf6,0x50,0x67
db 0xeb,0x61,0x68,0x29,0x29,0x29,0x29,0x29,0x44,0x4d,0xc9,0x3e,0x18,0x90,0x57,0x0f
db 0x0f,0x0f,0xe6,0xe0,0x6f,0x7a,0xe6,0x18,0xf6,0x40,0x67,0xc9,0xf3,0x06,0xb0,0x21
db 0x00,0x40,0xe5,0xc5,0xcd,0xf4,0x0e,0xc1,0xe1,0x24,0x7c,0xe6,0x07,0x20,0x0a,0x7d
db 0xc6,0x20,0x6f,0x3f,0x9f,0xe6,0xf8,0x84,0x67,0x10,0xe7,0x18,0x0d,0xf3,0x21,0x00
db 0x5b,0x06,0x08,0xc5,0xcd,0xf4,0x0e,0xc1,0x10,0xf9,0x3e,0x04,0xd3,0xfb,0xfb,0x21
db 0x00,0x5b,0xfd,0x75,0x46,0xaf,0x47,0x77,0x23,0x10,0xfc,0xfd,0xcb,0x30,0x8e,0x0e
db 0x21,0xc3,0xd9,0x0d,0x78,0xfe,0x03,0x9f,0xe6,0x02,0xd3,0xfb,0x57,0xcd,0x54,0x1f
db 0x38,0x0a,0x3e,0x04,0xd3,0xfb,0xfb,0xcd,0xdf,0x0e,0xcf,0x0c,0xdb,0xfb,0x87,0xf8
db 0x30,0xeb,0x0e,0x20,0x5e,0x23,0x06,0x08,0xcb,0x12,0xcb,0x13,0xcb,0x1a,0xdb,0xfb
db 0x1f,0x30,0xfb,0x7a,0xd3,0xfb,0x10,0xf0,0x0d,0x20,0xe9,0xc9,0x2a,0x3d,0x5c,0xe5
db 0x21,0x7f,0x10,0xe5,0xed,0x73,0x3d,0x5c

db 0xcd,0xd4,0x15

db 0xf5,0x16,0x00,0xfd,0x5e
db 0xff,0x21,0xc8,0x00

    call beeper
    pop af
    ld hl,0x0f38
    push hl

; Now analyse the code obtained.

    cp 0x18
    db 0x30,0x31
    cp 0x07
    db 0x38,0x2d
    cp 0x10
    db 0x38,0x3a,0x01,0x02,0x00,0x57,0xfe,0x16,0x38,0x0c
db 0x03,0xfd,0xcb,0x37,0x7e,0xca,0x1e,0x10

db 0xcd,0xd4,0x15

    ld e,a
db 0xcd,0xd4,0x15

db 0xd5
db 0x2a,0x5b,0x5c,0xfd,0xcb,0x07,0x86

db 0xcd,0x55,0x16

db 0xc1,0x23,0x70,0x23,0x71,0x18
db 0x0a,0xfd,0xcb,0x07,0x86,0x2a,0x5b,0x5c

db 0xcd,0x52,0x16

db 0x12,0x13,0xed,0x53,0x5b
db 0x5c,0xc9,0x5f,0x16,0x00,0x21,0x99,0x0f,0x19,0x5e,0x19,0xe5,0x2a,0x5b,0x5c,0xc9
db 0x09,0x66,0x6a,0x50,0xb5,0x70,0x7e,0xcf,0xd4,0x2a,0x49,0x5c,0xfd,0xcb,0x37,0x6e
db 0xc2,0x97,0x10

db 0xcd,0x6e,0x19
db 0xcd,0x95,0x16

db 0x7a,0xb3,0xca,0x97,0x10,0xe5,0x23
db 0x4e,0x23,0x46,0x21,0x0a,0x00,0x09,0x44,0x4d

db 0xcd,0x05,0x1f
db 0xcd,0x97,0x10

db 0x2a

db 0x51,0x5c,0xe3,0xe5,0x3e,0xff

db 0xcd,0x01,0x16

db 0xe1,0x2b,0xfd,0x35,0x0f,0xcd,0x55
db 0x18,0xfd,0x34,0x0f,0x2a,0x59,0x5c,0x23,0x23,0x23,0x23,0x22,0x5b,0x5c,0xe1

db 0xcd,0x15,0x16

db 0xc9,0xfd,0xcb,0x37,0x6e,0x20,0x08,0x21,0x49,0x5c

db 0xcd,0x0f,0x19

db 0x18
db 0x6d,0xfd,0x36,0x00,0x10,0x18,0x1d

db 0xcd,0x31,0x10

db 0x18,0x05,0x7e,0xfe,0x0d,0xc8
db 0x23,0x22,0x5b,0x5c,0xc9,0xcd,0x31,0x10,0x01,0x01,0x00,0xc3,0xe8,0x19

db 0xcd,0xd4
db 0x15

db 0xcd,0xd4,0x15

db 0xe1,0xe1,0xe1,0x22,0x3d,0x5c,0xfd,0xcb,0x00,0x7e,0xc0,0xf9
db 0xc9,0x37

db 0xcd,0x95,0x11

db 0xed,0x52,0x19,0x23,0xc1,0xd8,0xc5,0x44,0x4d,0x62,0x6b
db 0x23,0x1a,0xe6,0xf0,0xfe,0x10,0x20,0x09,0x23,0x1a,0xd6,0x17,0xce,0x00,0x20,0x01
db 0x23,0xa7,0xed,0x42,0x09,0xeb,0x38,0xe6,0xc9,0xfd,0xcb,0x37,0x6e,0xc0,0x2a,0x49
db 0x5c

db 0xcd,0x6e,0x19

db 0xeb,0xcd,0x95,0x16,0x21,0x4a,0x5c

db 0xcd,0x1c,0x19
db 0xcd,0x95,0x17

db 0x3e,0x00,0xc3,0x01,0x16,0xfd,0xcb,0x37,0x7e,0x28,0xa8,0xc3,0x81,0x0f,0xfd
db 0xcb,0x30,0x66,0x28,0xa1,0xfd,0x36,0x00,0xff,0x16,0x00,0xfd,0x5e,0xfe,0x21,0x90
db 0x1a,0xcd,0xb5,0x03,0xc3,0x30,0x0f,0xe5

db 0xcd,0x90,0x11

db 0x2b

db 0xcd,0xe5,0x19

db 0x22
db 0x5b,0x5c,0xfd,0x36,0x07,0x00,0xe1,0xc9,0xfd,0xcb,0x02,0x5e,0xc4,0x1d,0x11,0xa7
db 0xfd,0xcb,0x01,0x6e,0xc8,0x3a,0x08,0x5c,0xfd,0xcb,0x01,0xae,0xf5,0xfd,0xcb,0x02
db 0x6e,0xc4,0x6e,0x0d,0xf1,0xfe,0x20,0x30,0x52,0xfe,0x10,0x30,0x2d,0xfe,0x06,0x30
db 0x0a,0x47,0xe6,0x01,0x4f,0x78,0x1f,0xc6,0x12,0x18,0x2a,0x20,0x09,0x21,0x6a,0x5c
db 0x3e,0x08,0xae,0x77,0x18,0x0e,0xfe,0x0e,0xd8,0xd6,0x0d,0x21,0x41,0x5c,0xbe,0x77
db 0x20,0x02,0x36,0x00,0xfd,0xcb,0x02,0xde,0xbf,0xc9,0x47,0xe6,0x07,0x4f,0x3e,0x10
db 0xcb,0x58,0x20,0x01,0x3c,0xfd,0x71,0xd3,0x11,0x0d,0x11,0x18,0x06,0x3a,0x0d,0x5c
db 0x11,0xa8,0x10,0x2a,0x4f,0x5c,0x23,0x23,0x73,0x23,0x72,0x37,0xc9,0xcd,0x4d,0x0d
db 0xfd,0xcb,0x02,0x9e,0xfd,0xcb,0x02,0xae,0x2a,0x8a,0x5c,0xe5,0x2a,0x3d,0x5c,0xe5
db 0x21,0x67,0x11,0xe5,0xed,0x73,0x3d,0x5c,0x2a,0x82,0x5c,0xe5,0x37,0xcd,0x95,0x11
db 0xeb
db 0xcd,0x7d,0x18
db 0xeb
db 0xcd,0xe1,0x18
db 0x2a,0x8a,0x5c,0xe3,0xeb
db 0xcd,0x4d,0x0d
db 0x3a,0x8b,0x5c,0x92,0x38,0x26,0x20,0x06,0x7b,0xfd,0x96,0x50,0x30,0x1e,0x3e,0x20
db 0xd5

db 0xcd,0xf4,0x09

db 0xd1,0x18,0xe9,0x16,0x00,0xfd,0x5e,0xfe,0x21,0x90,0x1a

db 0xcd,0xb5,0x03

db 0xfd,0x36,0x00,0xff,0xed,0x5b,0x8a,0x5c,0x18,0x02,0xd1,0xe1,0xe1,0x22
db 0x3d,0x5c,0xc1,0xd5

db 0xcd,0xd9,0x0d
    pop hl
    ld (0x5c82),hl
db 0xfd,0x36,0x26,0x00,0xc9
db 0x2a,0x61,0x5c,0x2b,0xa7,0xed,0x5b,0x59,0x5c,0xfd,0xcb,0x37,0x6e,0xc8,0xed,0x5b
db 0x61,0x5c,0xd8,0x2a,0x63,0x5c,0xc9,0x7e,0xfe,0x0e,0x01,0x06,0x00,0xcc,0xe8,0x19
db 0x7e,0x23,0xfe,0x0d,0x20,0xf1,0xc9,0xf3,0x3e,0xff,0xed,0x5b,0xb2,0x5c,0xd9,0xed
db 0x4b,0xb4,0x5c,0xed,0x5b,0x38,0x5c,0x2a,0x7b,0x5c
    exx

; The main entry point.

start_new:
    ld b,a
    ld a,0x07
    out (0xfe),a
    ld a,0x3f
    ld i,a
    nop
    nop
    nop
    nop
    nop
    nop

; Now the memory is checked.

ram_check:
    ld h,d
    ld l,e
ram_fill:
    ld (hl),0x02
    dec hl
    cp h
    jr nz,ram_fill
ram_read:
    and a
    sbc hl,de
    add hl,de
    inc hl
    jr nc,ram_done
    dec (hl)
    jr z,ram_done
    dec (hl)
    jr z,ram_read
ram_done:
    dec hl

; Next restore the 'preserved' system
; variables. (Meaningless when coming from START.)

    exx
    db 0xed,0x43,0xb4,0x5c
    db 0xed,0x53,0x38,0x5c
    db 0x22,0x7b,0x5c
    exx
    inc b
    jr z,ram_set
    db 0x22,0xb4,0x5c
    db 0x11,0xaf,0x3e
    db 0x01,0xa8,0x00
    ex de,hl
    lddr
    ex de,hl
    inc hl
    db 0x22,0x7b,0x5c
    dec hl
    db 0x01,0x40,0x00
    db 0xed,0x43,0x38,0x5c

; The remainder of the routine is common to both the START and the NEW operations.
ram_set:
    ld (0x5cb2),hl  ; Set RAMTOP
    ld hl,0x3c00    ; Initialize the system variable
    ld (CHARS),hl  ; CHARS.

; Next the machine stack is set up.
    ld hl,(0x5cb2)
    ld (hl),0x3e
    dec hl
    ld sp,hl
db 0x2b,0x2b,0x22,0x3d,0x5c,0xed,0x56
db 0xfd,0x21,0x3a,0x5c,0xfb,0x21,0xb6,0x5c,0x22,0x4f,0x5c,0x11,0xaf,0x15,0x01,0x15
db 0x00,0xeb,0xed,0xb0,0xeb,0x2b,0x22,0x57,0x5c,0x23,0x22,0x53,0x5c,0x22,0x4b,0x5c
db 0x36,0x80,0x23,0x22,0x59,0x5c,0x36,0x0d,0x23,0x36,0x80,0x23,0x22,0x61,0x5c,0x22
db 0x63,0x5c,0x22,0x65,0x5c,0x3e,0x38,0x32,0x8d,0x5c,0x32,0x8f,0x5c,0x32,0x48,0x5c
db 0x21,0x23,0x05,0x22,0x09,0x5c,0xfd,0x35,0xc6,0xfd,0x35,0xca,0x21,0xc6,0x15,0x11
db 0x10,0x5c,0x01,0x0e,0x00,0xed,0xb0,0xfd,0xcb,0x01,0xce

    db 0xcd,0xdf,0x0e

    db 0xfd,0x36
    db 0x31,0x02,0xcd,0x6b,0x0d,0xaf,0x11,0x38,0x15

    db 0xcd,0x0a,0x0c
    set 5,(iy+2)
    jr main_1

; THE 'MAIN EXECUTION' LOOP
; The main loop extends from location 12A2 to location 15AE and it controls
; the 'editing mode', the execution of direct commands and the production of reports.
main_exec:
    ld (iy+49),0x02
    db 0xcd,0x95,0x17
main_1:
    db 0xcd,0xb0,0x16
main_2:
    ld a,0x00
    db 0xcd,0x01,0x16
    db 0xcd,0x2c,0x0f
    call line_scan
    ;db 0xcd,0x17,0x1b
    bit 7,(iy+0)
    db 0x20,0x12
    bit 4,(iy+48)
    db 0x28,0x40,0x2a,0x59,0x5c
    db 0xcd,0xa7,0x11
    ld (iy+0),0xff
    jr main_2
main_3:
    db 0x2a
    db 0x59,0x5c,0x22,0x5d,0x5c
    db 0xcd,0xfb,0x19
    ld a,b
    or c
    db 0xc2,0x5d,0x15
    rst 0x18
    cp 0x0d
    db 0x28,0xc0

; The 'edit-line' must start with a direct BASIC command
; so this line becomes the first line to be interpreted.

    bit 0,(iy+48)
    db 0xc4,0xaf,0x0d
    db 0xcd,0x6e,0x0d
    ld a,0x19
    sub (iy+79)
    ld (0x5c8c),a
    set 7,(iy+1)
    ld (iy+0),0xff
    ld (iy+10),0x01
    db 0xcd,0x8a,0x1b

; After the line has been interpreted and all the actions consequential
; to it have been completed a return is made to MAIN-4, so that a
; report can be made.

main_4:
    halt
    res 5,(iy+1)
    bit 1,(iy+48)
    db 0xc4,0xcd,0x0e
    ld a,(0x5c3a)
    inc a
main_g:
    push af
    ld hl,0x0000
    ld (iy+55),h
    ld (iy+38),h
    db 0x22,0x0b,0x5c
    db 0x21,0x01,0x00,0x22,0x16,0x5c
    db 0xcd,0xb0,0x16
    res 5,(iy+55)
    db 0xcd,0x6e,0x0d
    set 5,(iy+2)
    pop af
    ld b,a
    cp 0x0a
    db 0x38,0x02
    add a,0x07
main_5:
    db 0xcd,0xef,0x15
    ld a,0x20
db 0xd7,0x78,0x11,0x91,0x13,0xcd,0x0a,0x0c,0xaf,0x11,0x36,0x15,0xcd,0x0a,0x0c
db 0xed,0x4b,0x45,0x5c,0xcd,0x1b,0x1a,0x3e,0x3a,0xd7,0xfd,0x4e,0x0d,0x06,0x00,0xcd
db 0x1b,0x1a,0xcd,0x97,0x10,0x3a,0x3a,0x5c,0x3c,0x28,0x1b,0xfe,0x09,0x28,0x04,0xfe
db 0x15,0x20,0x03,0xfd,0x34,0x0d,0x01,0x03,0x00,0x11,0x70,0x5c,0x21,0x44,0x5c,0xcb
db 0x7e,0x28,0x01,0x09,0xed,0xb8,0xfd,0x36,0x0a,0xff,0xfd,0xcb,0x01,0x9e,0xc3,0xac
db 0x12,0x80,0x4f,0xcb
db 'NEXT without FO',0xd2
db 'Variable not foun',0xe4
db 'Subscript wron',0xe7
db 0x4f,0x75,0x74,0x20,0x6f,0x66,0x20,0x6d,0x65,0x6d,0x6f
db 0x72,0xf9,'Out',0x20,0x6f,0x66,0x20,0x73,0x63,0x72,0x65,0x65,0xee,0x4e
db 'umber',0x20,0x74,0x6f,0x6f,0x20,0x62,0x69,0xe7,0x52,0x45,0x54
db 'URN without',0x20,0x47,0x4f,0x53,0x55
db 0xc2,'End',0x20,0x6f,0x66,0x20,0x66,0x69,0x6c,0xe5,0x53,0x54,0x4f,0x50
db 0x20,0x73,0x74,0x61,0x74,0x65,0x6d,0x65,0x6e,0xf4,0x49,0x6e,0x76,0x61,0x6c,0x69
db 0x64,0x20,0x61,0x72,0x67,0x75,0x6d,0x65,0x6e,0xf4,0x49,0x6e,0x74,0x65,0x67,0x65
db 0x72,0x20,0x6f,0x75,0x74,0x20,0x6f,0x66,0x20,0x72,0x61,0x6e,0x67,0xe5,0x4e,0x6f
db 'nsense',0x20,0x69,0x6e,0x20,0x42,0x41,0x53,0x49,0xc3
db 'BREAK - CONT',0x20,0x72,0x65,0x70,0x65
db 0x61,0x74,0xf3,0x4f,0x75,0x74,0x20,0x6f,0x66,0x20,0x44,0x41,0x54,0xc1,0x49,0x6e
db 0x76,0x61,0x6c,0x69,0x64,0x20,0x66,0x69,0x6c,0x65,0x20,0x6e,0x61,0x6d,0xe5,0x4e
db 0x6f,0x20,0x72,0x6f,0x6f,0x6d,0x20,0x66,0x6f,0x72,0x20,0x6c,0x69,0x6e,0xe5,0x53
db 0x54,0x4f,0x50,0x20,0x69,0x6e,0x20,0x49,0x4e,0x50,0x55,0xd4,0x46,0x4f,0x52,0x20
db 0x77,0x69,0x74,0x68,0x6f,0x75,0x74,0x20,0x4e,0x45,0x58,0xd4,0x49,0x6e,0x76,0x61
db 0x6c,0x69,0x64,0x20,0x49,0x2f,0x4f,0x20,0x64,0x65,0x76,0x69,0x63,0xe5,0x49,0x6e
db 0x76,0x61,0x6c,0x69,0x64,0x20,0x63,0x6f,0x6c,0x6f,0x75,0xf2,0x42,0x52,0x45,0x41
db 0x4b,0x20,0x69,0x6e,0x74,0x6f,0x20,0x70,0x72,0x6f,0x67,0x72,0x61,0xed,0x52,0x41
db 0x4d,0x54,0x4f,0x50,0x20,0x6e,0x6f,0x20,0x67,0x6f,0x6f,0xe4,0x53,0x74,0x61,0x74
db 0x65,0x6d,0x65,0x6e,0x74,0x20,0x6c,0x6f,0x73,0xf4,0x49,0x6e,0x76,0x61,0x6c,0x69
db 0x64,0x20,0x73,0x74,0x72,0x65,0x61,0xed,0x46,0x4e,0x20,0x77,0x69,0x74,0x68,0x6f
db 0x75,0x74,0x20,0x44,0x45,0xc6,0x50,0x61,0x72,0x61,0x6d,0x65,0x74,0x65,0x72,0x20
db 0x65,0x72,0x72,0x6f,0xf2,0x54,0x61,0x70,0x65,0x20,0x6c,0x6f,0x61,0x64,0x69,0x6e
db 0x67,0x20,0x65,0x72,0x72,0x6f,0xf2,0x2c,0xa0,0x7f,0x20
db '1982 Sinclair Research Lt'
db 0xe4
report_g:
    ld a,0x10
    ld bc,0x0000
db 0xc3,0x13,0x13,0xed,0x43,0x49
db 0x5c,0x2a,0x5d,0x5c,0xeb,0x21,0x55,0x15,0xe5,0x2a,0x61,0x5c,0x37,0xed,0x52,0xe5
db 0x60,0x69,0xcd,0x6e,0x19,0x20,0x06,0xcd,0xb8,0x19,0xcd,0xe8,0x19,0xc1,0x79,0x3d
db 0xb0,0x28,0x28,0xc5,0x03,0x03,0x03,0x03,0x2b,0xed,0x5b,0x53,0x5c,0xd5,0xcd,0x55
db 0x16,0xe1,0x22,0x53,0x5c,0xc1,0xc5,0x13,0x2a,0x61,0x5c,0x2b,0x2b,0xed,0xb8,0x2a
db 0x49,0x5c,0xeb,0xc1,0x70,0x2b,0x71,0x2b,0x73,0x2b,0x72,0xf1,0xc3,0xa2,0x12,0xf4
db 0x09,0xa8,0x10,0x4b,0xf4,0x09,0xc4,0x15,0x53,0x81,0x0f,0xc4,0x15,0x52,0xf4,0x09
db 0xc4,0x15,0x50,0x80,0xcf,0x12,0x01,0x00,0x06,0x00,0x0b,0x00,0x01,0x00,0x01,0x00
db 0x06,0x00,0x10,0x00,0xfd,0xcb,0x02,0x6e,0x20,0x04,0xfd,0xcb,0x02,0xde,0xcd,0xe6
db 0x15,0xd8,0x28,0xfa,0xcf,0x07,0xd9,0xe5,0x2a,0x51,0x5c,0x23,0x23,0x18,0x08,0x1e
db 0x30,0x83
print_a_2:
    exx
    db 0xe5,0x2a,0x51,0x5c

; Now call the actual subroutine. HL points to
; the output or the input address as directed.

call_sub:
    ld e,(hl)
    inc hl
    ld d,(hl)
    ex de,hl
    db 0xcd,0x2c,0x16
    pop hl
    exx
    ret

; THE 'CHAN-OPEN' SUBROUTINE
; This subroutine is called with the A register holding a valid stream
; number - normally +FD to +03. Then depending on the stream data a
; particular channel will be made the current channel.

chan_open:
    add a,a
    add a,0x16
db 0x6f,0x26,0x5c,0x5e,0x23,0x56,0x7a,0xb3,0x20,0x02,0xcf,0x17
db 0x1b,0x2a,0x4f,0x5c,0x19,0x22,0x51,0x5c,0xfd,0xcb,0x30,0xa6,0x23,0x23,0x23,0x23
db 0x4e,0x21,0x2d,0x16

db 0xcd,0xdc,0x16

db 0xd0,0x16,0x00,0x5e,0x19,0xe9,0x4b,0x06,0x53
db 0x12,0x50,0x1b,0x00,0xfd,0xcb,0x02,0xc6,0xfd,0xcb,0x01,0xae,0xfd,0xcb,0x30,0xe6
db 0x18,0x04,0xfd,0xcb,0x02,0x86,0xfd,0xcb,0x01,0x8e,0xc3,0x4d,0x0d,0xfd,0xcb,0x01
db 0xce
    ret

; THE 'MAKE-ROOM' SUBROUTINE
; This is a very important subroutine. It is called on many occasions
; to 'open up' an area. In all cases the HL register pair points to the
; location after the place where 'room' is required and the BC register
; pair holds the length of the 'room' needed. When a single space
; only is required then the subroutine is entered at ONE-SPACE.

;one_space:
    ld bc,1
make_room:
    push hl
    db 0xcd,0x05,0x1f
    pop hl
    db 0xcd,0x64,0x16
    db 0x2a,0x65,0x5c
    db 0xeb,0xed,0xb8,0xc9
;pointers:
    db 0xf5,0xe5,0x21,0x4b,0x5c,0x3e,0x0e,0x5e,0x23,0x56,0xe3,0xa7
    db 0xed,0x52,0x19,0xe3,0x30,0x09,0xd5,0xeb,0x09,0xeb,0x72,0x2b,0x73,0x23,0xd1,0x23
    db 0x3d,0x20,0xe8,0xeb,0xd1,0xf1,0xa7,0xed,0x52,0x44,0x4d,0x03,0x19,0xeb,0xc9,0x00
    db 0x00,0xeb,0x11,0x8f,0x16,0x7e,0xe6,0xc0,0x20,0xf7,0x56,0x23,0x5e,0xc9

; THE 'RESERVE' SUBROUTINE
; This subroutine is normally called by using RST 0030,BC-SPACES.
; On entry here the last value on the machine stack is WORKSP and the
; value above it is the number of spaces that is to be 'reserved'.
; This subroutine always makes 'room' between
; the existing work space and the calculator stack.

reserve:
    ld hl,(STKBOT)
    dec hl
    call make_room
    inc hl
    inc hl
    db 0xc1,0xed,0x43,0x61,0x5c,0xc1,0xeb,0x23
    ret

; Note: It can also be considered that the subroutine returns with the DE
; register pair pointing to a 'first extra byte' and the HL register
; pair pointing to a 'last extra byte', these extra bytes having been
; added after the original '(HL)+1' location.

; THE 'SET-MIN' SUBROUTINE
; This subroutine resets the editing area and the areas after
; it to their minimum sizes. In effect it 'clears' the areas.

;set_min:
    ld hl,(E_LINE)
    ld (hl),0x0d
    db 0x22,0x5b,0x5c
    inc hl
    db 0x36,0x80
    inc hl
    ld (WORKSP),hl

; Entering here will 'clear' the work space and the calculator stack.

;set_work:
    ld hl,(WORKSP)
    ld (STKBOT),hl

; Entering here will 'clear' only the calculator stack.

set_stk:
    ld hl,(STKBOT)
    ld (STKEND),hl

; In all cases make MEM address the calculator's memory area.

    push hl
    ld hl,0x5c92
    db 0x22
    db 0x68,0x5c
    pop hl
    ret
    db 0xed,0x5b,0x59,0x5c,0xc3,0xe5,0x19,0x23,0x7e,0xa7,0xc8,0xb9
    db 0x23,0x20,0xf8,0x37,0xc9
;close:
    call str_data
    call close_2
    ld bc,0
    ld de,0xa3e2
    ex de,hl
    add hl,de
    jr c,close_1
    ld bc,0x15d4
    add hl,bc
    ld c,(hl)
    inc hl
    ld b,(hl)
close_1:
    ex de,hl
    ld (hl),c
    inc hl
    ld (hl),b
    ret
close_2:
    db 0xe5,0x2a,0x4f,0x5c,0x09,0x23,0x23,0x23,0x4e,0xeb,0x21,0x16,0x17
    db 0xcd,0xdc,0x16
    ld c,(hl)
    ld b,0
    add hl,bc
    jp (hl)
    db 0x4b,0x05,0x53,0x03,0x50,0x01
close_str:
    pop hl
    ret
str_data:
    db 0xcd,0x94
db 0x1e,0xfe,0x10,0x38,0x02,0xcf,0x17,0xc6,0x03,0x07,0x21,0x10,0x5c,0x4f,0x06,0x00
db 0x09,0x4e,0x23,0x46,0x2b,0xc9,0xef,0x01,0x38,0xcd,0x1e,0x17,0x78,0xb1,0x28,0x16
db 0xeb,0x2a,0x4f,0x5c,0x09,0x23,0x23,0x23,0x7e,0xeb,0xfe,0x4b,0x28,0x08,0xfe,0x53
db 0x28,0x04,0xfe,0x50,0x20,0xcf,0xcd,0x5d,0x17,0x73,0x23,0x72,0xc9,0xe5,0xcd,0xf1
db 0x2b,0x78,0xb1,0x20,0x02,0xcf,0x0e,0xc5,0x1a,0xe6,0xdf,0x4f,0x21,0x7a,0x17,0xcd
db 0xdc,0x16,0x30,0xf1,0x4e,0x06,0x00,0x09,0xc1,0xe9,0x4b,0x06,0x53,0x08,0x50,0x0a
db 0x00,0x1e,0x01,0x18,0x06,0x1e,0x06,0x18,0x02,0x1e,0x10,0x0b,0x78,0xb1,0x20,0xd5
db 0x57,0xe1,0xc9,0x18,0x90,0xed,0x73,0x3f,0x5c,0xfd,0x36,0x02,0x10,0xcd,0xaf,0x0d
db 0xfd,0xcb,0x02,0xc6,0xfd,0x46,0x31,0xcd,0x44,0x0e,0xfd,0xcb,0x02,0x86,0xfd,0xcb
db 0x30,0xc6,0x2a,0x49,0x5c,0xed,0x5b,0x6c,0x5c,0xa7,0xed,0x52,0x19,0x38,0x22,0xd5

db 0xcd,0x6e,0x19

db 0x11,0xc0,0x02,0xeb,0xed,0x52,0xe3

db 0xcd,0x6e,0x19

db 0xc1,0xc5

db 0xcd,0xb8,0x19

db 0xc1,0x09,0x38,0x0e,0xeb,0x56,0x23,0x5e,0x2b,0xed,0x53,0x6c,0x5c,0x18
db 0xed,0x22,0x6c,0x5c,0x2a,0x6c,0x5c

db 0xcd,0x6e,0x19

db 0x28,0x01,0xeb

db 0xcd,0x33,0x18

db 0xfd,0xcb,0x02,0xa6,0xc9,0x3e,0x03,0x18,0x02,0x3e,0x02,0xfd,0x36,0x02,0x00,0xcd
db 0x30,0x25,0xc4,0x01,0x16,0xdf

db 0xcd,0x70,0x20

db 0x38,0x14,0xdf,0xfe,0x3b,0x28,0x04
db 0xfe,0x2c,0x20,0x06,0xe7

db 0xcd,0x82,0x1c

db 0x18,0x08

db 0xcd,0xe6,0x1c

db 0x18,0x03

db 0xcd,0xde,0x1c
db 0xcd,0xee,0x1b
db 0xcd,0x99,0x1e

db 0x78,0xe6,0x3f,0x67,0x69,0x22,0x49,0x5c

db 0xcd,0x6e,0x19

db 0x1e,0x01

db 0xcd,0x55,0x18

db 0xd7,0xfd,0xcb,0x02,0x66,0x28,0xf6,0x3a
db 0x6b,0x5c,0xfd,0x96,0x4f,0x20,0xee,0xab,0xc8,0xe5,0xd5,0x21,0x6c,0x5c,0xcd,0x0f
db 0x19,0xd1,0xe1,0x18,0xe0,0xed,0x4b,0x49,0x5c,0xcd,0x80,0x19,0x16,0x3e,0x28,0x05
db 0x11,0x00,0x00,0xcb,0x13,0xfd,0x73,0x2d,0x7e,0xfe,0x40,0xc1,0xd0,0xc5,0xcd,0x28
db 0x1a,0x23,0x23,0x23,0xfd,0xcb,0x01,0x86,0x7a,0xa7,0x28,0x05,0xd7,0xfd,0xcb,0x01
db 0xc6,0xd5,0xeb,0xfd,0xcb,0x30,0x96,0x21,0x3b,0x5c,0xcb,0x96,0xfd,0xcb,0x37,0x6e
db 0x28,0x02,0xcb,0xd6,0x2a,0x5f,0x5c,0xa7,0xed,0x52,0x20,0x05,0x3e,0x3f,0xcd,0xc1
db 0x18,0xcd,0xe1,0x18,0xeb,0x7e,0xcd,0xb6,0x18,0x23,0xfe,0x0d,0x28,0x06,0xeb,0xcd
db 0x37,0x19,0x18,0xe0,0xd1,0xc9,0xfe,0x0e,0xc0,0x23,0x23,0x23,0x23,0x23,0x23,0x7e
db 0xc9,0xd9,0x2a,0x8f,0x5c,0xe5,0xcb,0xbc,0xcb,0xfd,0x22,0x8f,0x5c,0x21,0x91,0x5c
db 0x56,0xd5,0x36,0x00,0xcd,0xf4,0x09,0xe1,0xfd,0x74,0x57,0xe1,0x22,0x8f,0x5c,0xd9
db 0xc9,0x2a,0x5b,0x5c,0xa7,0xed,0x52,0xc0,0x3a,0x41,0x5c,0xcb,0x07,0x28,0x04,0xc6
db 0x43,0x18,0x16,0x21,0x3b,0x5c,0xcb,0x9e,0x3e,0x4b,0xcb,0x56,0x28,0x0b,0xcb,0xde
db 0x3c,0xfd,0xcb,0x30,0x5e,0x28,0x02,0x3e,0x43,0xd5,0xcd,0xc1,0x18,0xd1,0xc9,0x5e
db 0x23,0x56,0xe5,0xeb,0x23
db 0xcd,0x6e,0x19
db 0xcd,0x95,0x16
db 0xe1,0xfd,0xcb,0x37,0x6e
db 0xc0,0x72,0x2b,0x73,0xc9,0x7b,0xa7,0xf8,0x18,0x0d,0xaf,0x09,0x3c,0x38,0xfc,0xed
db 0x42,0x3d,0x28,0xf1,0xc3,0xef,0x15

db 0xcd,0x1b,0x2d

db 0x30,0x30
db 0xfe,0x21,0x38,0x2c
db 0xfd,0xcb,0x01,0x96,0xfe,0xcb,0x28,0x24,0xfe,0x3a,0x20,0x0e,0xfd,0xcb,0x37,0x6e
db 0x20,0x16,0xfd,0xcb,0x30,0x56,0x28,0x14,0x18,0x0e,0xfe,0x22,0x20,0x0a,0xf5,0x3a
db 0x6a,0x5c,0xee,0x04,0x32,0x6a,0x5c,0xf1,0xfd,0xcb,0x01,0xd6,0xd7,0xc9

line_addr:
    push hl
    ld hl,(0x5c53)
    ld d,h
    ld e,l

; Now enter a loop to test the line number of each line of the program
; against the given line number until the line number is matched or
; exceeded.

line_ad_1:
    pop bc
    call cp_lines
    ret nc
    push bc
    db 0xcd,0xb8,0x19
    ex de,hl
    jr line_ad_1
cp_lines:
    ld a,(hl)
    cp b
db 0xc0,0x23,0x7e,0x2b,0xb9,0xc9,0x23,0x23,0x23,0x22,0x5d,0x5c,0x0e,0x00
db 0x15,0xc8,0xe7,0xbb,0x20,0x04,0xa7,0xc9,0x23,0x7e,0xcd,0xb6,0x18,0x22,0x5d,0x5c
db 0xfe,0x22,0x20,0x01,0x0d,0xfe,0x3a,0x28,0x04,0xfe,0xcb,0x20,0x04,0xcb,0x41,0x28
db 0xdf,0xfe,0x0d,0x20,0xe3,0x15,0x37,0xc9,0xe5,0x7e,0xfe,0x40,0x38,0x17,0xcb,0x6f
db 0x28,0x14,0x87,0xfa,0xc7,0x19,0x3f,0x01,0x05,0x00,0x30,0x02,0x0e,0x12,0x17,0x23
db 0x7e,0x30,0xfb,0x18,0x06,0x23,0x23,0x4e,0x23,0x46,0x23,0x09,0xd1,0xa7,0xed,0x52
db 0x44,0x4d,0x19,0xeb,0xc9,0xcd,0xdd,0x19,0xc5,0x78,0x2f,0x47,0x79,0x2f,0x4f,0x03
db 0xcd,0x64,0x16,0xeb,0xe1,0x19,0xd5,0xed,0xb0,0xe1,0xc9,0x2a,0x59,0x5c,0x2b,0x22
db 0x5d,0x5c,0xe7,0x21,0x92,0x5c,0x22,0x65,0x5c

db 0xcd,0x3b,0x2d
db 0xcd,0xa2,0x2d

db 0x38
db 0x04,0x21,0xf0,0xd8,0x09,0xda,0x8a,0x1c,0xc3,0xc5,0x16,0xd5,0xe5,0xaf,0xcb,0x78
db 0x20,0x20,0x60,0x69,0x1e,0xff,0x18,0x08,0xd5,0x56,0x23,0x5e,0xe5,0xeb,0x1e,0x20
db 0x01,0x18,0xfc

db 0xcd,0x2a,0x19

db 0x01,0x9c,0xff

db 0xcd,0x2a,0x19

db 0x0e,0xf6

db 0xcd,0x2a,0x19

db 0x7d

db 0xcd,0xef,0x15

db 0xe1,0xd1,0xc9,0xb1,0xcb,0xbc,0xbf,0xc4,0xaf,0xb4,0x93
db 0x91,0x92,0x95,0x98,0x98,0x98,0x98,0x98,0x98,0x98,0x7f,0x81,0x2e,0x6c,0x6e,0x70
db 0x48,0x94,0x56,0x3f,0x41,0x2b,0x17,0x1f,0x37,0x77,0x44,0x0f,0x59,0x2b,0x43,0x2d
db 0x51,0x3a,0x6d,0x42,0x0d,0x49,0x5c,0x44,0x15,0x5d,0x01,0x3d,0x02,0x06,0x00,0x67
db 0x1e,0x06,0xcb,0x05,0xf0,0x1c,0x06,0x00,0xed,0x1e,0x00,0xee,0x1c,0x00,0x23,0x1f
db 0x04,0x3d,0x06,0xcc,0x06,0x05,0x03,0x1d,0x04,0x00,0xab,0x1d,0x05,0xcd,0x1f,0x05
db 0x89,0x20,0x05,0x02,0x2c,0x05,0xb2,0x1b,0x00,0xb7,0x11,0x03,0xa1,0x1e,0x05,0xf9
db 0x17,0x08,0x00,0x80,0x1e,0x03,0x4f,0x1e,0x00,0x5f,0x1e,0x03,0xac,0x1e,0x00,0x6b
db 0x0d,0x09,0x00,0xdc,0x22,0x06,0x00,0x3a,0x1f,0x05,0xed,0x1d,0x05,0x27,0x1e,0x03
db 0x42,0x1e,0x09,0x05,0x82,0x23,0x00,0xac,0x0e,0x05,0xc9,0x1f,0x05,0xf5,0x17,0x0b
db 0x0b,0x0b,0x0b,0x08,0x00,0xf8,0x03,0x09,0x05,0x20,0x23,0x07,0x07,0x07,0x07,0x07
db 0x07,0x08,0x00,0x7a,0x1e,0x06,0x00,0x94,0x22,0x05,0x60,0x1f,0x06,0x2c,0x0a,0x00
db 0x36,0x17,0x06,0x00,0xe5,0x16,0x0a,0x00,0x93,0x17,0x0a,0x2c,0x0a,0x00,0x93,0x17
db 0x0a,0x00,0x93,0x17,0x00,0x93,0x17

line_scan:
    res 7,(iy+1)
    db 0xcd,0xfb,0x19
    xor a
    db 0x32,0x47,0x5c
    db 0x3d,0x32,0x3a,0x5c,0x18,0x01
stmt_loop:
    rst 0x20
stmt_l_1:
    db 0xcd,0xbf,0x16
    inc (iy+13)
    db 0xfa,0x8a,0x1c
    rst 0x18
    ld b,0
    cp 0x0d
    db 0x28,0x7a
    cp 0x3a
    jr z,stmt_loop

; A statement has been identified so, first, its initial command is considered.

    db 0x21,0x76,0x1b
    push hl
    ld c,a
    rst 0x20
    ld a,c
    sub 0xce
    db 0xda,0x8a,0x1c
    ld c,a
    db 0x21,0x48,0x1a
db 0x09,0x4e,0x09
db 0x18,0x03,0x2a,0x74,0x5c,0x7e,0x23,0x22,0x74,0x5c,0x01,0x52,0x1b,0xc5,0x4f,0xfe
db 0x20,0x30,0x0c,0x21,0x01,0x1c,0x06,0x00,0x09,0x4e,0x09,0xe5,0xdf,0x05,0xc9,0xdf
db 0xb9,0xc2,0x8a,0x1c,0xe7,0xc9

stmt_ret:
    db 0xcd,0x54,0x1f
    db 0x38,0x02
report_l:
    rst 8
    db 0x14
stmt_r_1:
    bit 7,(iy+10)
    db 0x20,0x71
    db 0x2a,0x42,0x5c
    bit 7,h
    jr z,line_new

; THE 'LINE-RUN' ENTRY POINT

; This entry point is used wherever a line in the editing area is to
; be 'run'. In such a case the syntax/run flag (bit 7 of FLAGS) will be set.

; The entry point is also used in the syntax checking of a line in the
; editing area that has more than one statement (bit 7 of FLAGS will be
; reset).

;line_run:
    ld hl,0xfffe
    db 0x22,0x45,0x5c
    ld hl,(WORKSP)
    dec hl
    ld de,(E_LINE)
    dec de
    db 0x3a,0x44,0x5c,0x18,0x33
line_new:
    call line_addr

db 0x3a,0x44,0x5c,0x28,0x19,0xa7,0x20,0x43,0x47,0x7e,0xe6,0xc0,0x78,0x28,0x0f
db 0xcf,0xff,0xc1,0xcd,0x30,0x25,0xc8,0x2a,0x55,0x5c,0x3e,0xc0,0xa6,0xc0,0xaf,0xfe
db 0x01,0xce,0x00,0x56,0x23,0x5e,0xed,0x53,0x45,0x5c,0x23,0x5e,0x23,0x56,0xeb,0x19
db 0x23,0x22,0x55,0x5c,0xeb,0x22,0x5d,0x5c,0x57,0x1e,0x00,0xfd,0x36,0x0a,0xff,0x15
db 0xfd,0x72,0x0d,0xca,0x28,0x1b,0x14,0xcd,0x8b,0x19,0x28,0x08,0xcf,0x16,0xcd,0x30
db 0x25,0xc0,0xc1,0xc1,0xdf,0xfe,0x0d,0x28,0xba,0xfe,0x3a,0xca,0x28,0x1b,0xc3,0x8a
db 0x1c,0x0f,0x1d,0x4b,0x09,0x67,0x0b,0x7b,0x8e,0x71,0xb4,0x81,0xcf,0xcd,0xde,0x1c
db 0xbf,0xc1,0xcc,0xee,0x1b,0xeb,0x2a,0x74,0x5c,0x4e,0x23,0x46,0xeb,0xc5,0xc9

db 0xcd,0xb2,0x28

db 0xfd,0x36,0x37,0x00,0x30,0x08,0xfd,0xcb,0x37,0xce,0x20,0x18,0xcf,0x01
db 0xcc,0x96,0x29,0xfd,0xcb,0x01,0x76,0x20,0x0d,0xaf,0xcd,0x30,0x25,0xc4,0xf1,0x2b
db 0x21,0x71,0x5c,0xb6,0x77,0xeb,0xed,0x43,0x72,0x5c,0x22,0x4d,0x5c,0xc9,0xc1,0xcd
db 0x56,0x1c,0xcd,0xee,0x1b,0xc9,0x3a,0x3b,0x5c,0xf5,0xcd,0xfb,0x24,0xf1,0xfd,0x56
db 0x01,0xaa,0xe6,0x40,0x20,0x24,0xcb,0x7a,0xc2,0xff,0x2a,0xc9

db 0xcd,0xb2,0x28

db 0xf5
db 0x79,0xf6,0x9f,0x3c,0x20,0x14,0xf1,0x18,0xa9,0xe7,0xcd,0x82,0x1c,0xfe,0x2c,0x20
db 0x09,0xe7,0xcd,0xfb,0x24,0xfd,0xcb,0x01,0x76,0xc0,0xcf,0x0b,0xcd,0xfb,0x24,0xfd
db 0xcb,0x01,0x76,0xc8,0x18,0xf4,0xfd,0xcb,0x01,0x7e,0xfd,0xcb,0x02,0x86,0xc4,0x4d
db 0x0d,0xf1,0x3a,0x74,0x5c,0xd6,0x13,0xcd,0xfc,0x21,0xcd,0xee,0x1b,0x2a,0x8f,0x5c
db 0x22,0x8d,0x5c,0x21,0x91,0x5c,0x7e,0x07,0xae,0xe6,0xaa,0xae,0x77,0xc9,0xcd,0x30
db 0x25,0x28,0x13,0xfd,0xcb,0x02,0x86,0xcd,0x4d,0x0d,0x21,0x90,0x5c,0x7e,0xf6,0xf8
db 0x77,0xfd,0xcb,0x57,0xb6,0xdf,0xcd,0xe2,0x21,0x18,0x9f,0xc3,0x05,0x06,0xfe,0x0d
db 0x28,0x04,0xfe,0x3a,0x20,0x9c,0xcd,0x30,0x25,0xc8,0xef,0xa0,0x38,0xc9,0xcf,0x08
db 0xc1,0xcd,0x30,0x25,0x28,0x0a,0xef,0x02,0x38,0xeb,0xcd,0xe9,0x34,0xda,0xb3,0x1b
db 0xc3,0x29,0x1b,0xfe,0xcd,0x20,0x09,0xe7,0xcd,0x82,0x1c,0xcd,0xee,0x1b,0x18,0x06
db 0xcd,0xee,0x1b,0xef,0xa1,0x38,0xef,0xc0,0x02,0x01,0xe0,0x01,0x38,0xcd,0xff,0x2a
db 0x22,0x68,0x5c,0x2b,0x7e,0xcb,0xfe,0x01,0x06,0x00,0x09,0x07,0x38,0x06,0x0e,0x0d
db 0xcd,0x55,0x16,0x23,0xe5,0xef,0x02,0x02,0x38,0xe1,0xeb,0x0e,0x0a,0xed,0xb0,0x2a
db 0x45,0x5c,0xeb,0x73,0x23,0x72,0xfd,0x56,0x0d,0x14,0x23,0x72,0xcd,0xda,0x1d,0xd0
db 0xfd,0x46,0x38,0x2a,0x45,0x5c,0x22,0x42,0x5c,0x3a,0x47,0x5c,0xed,0x44,0x57,0x2a
db 0x5d,0x5c,0x1e,0xf3,0xc5,0xed,0x4b,0x55,0x5c,0xcd,0x86,0x1d,0xed,0x43,0x55,0x5c
db 0xc1,0x38,0x11,0xe7,0xf6,0x20,0xb8,0x28,0x03,0xe7,0x18,0xe8,0xe7,0x3e,0x01,0x92
db 0x32,0x44,0x5c,0xc9,0xcf,0x11,0x7e,0xfe,0x3a,0x28,0x18,0x23,0x7e,0xe6,0xc0,0x37
db 0xc0,0x46,0x23,0x4e,0xed,0x43,0x42,0x5c,0x23,0x4e,0x23,0x46,0xe5,0x09,0x44,0x4d
db 0xe1,0x16,0x00,0xc5,0xcd,0x8b,0x19,0xc1,0xd0,0x18,0xe0,0xfd,0xcb,0x37,0x4e,0xc2
db 0x2e,0x1c,0x2a,0x4d,0x5c,0xcb,0x7e,0x28,0x1f,0x23,0x22,0x68,0x5c,0xef,0xe0,0xe2
db 0x0f,0xc0,0x02,0x38,0xcd,0xda,0x1d,0xd8,0x2a,0x68,0x5c,0x11,0x0f,0x00,0x19,0x5e
db 0x23,0x56,0x23,0x66,0xeb,0xc3,0x73,0x1e,0xcf,0x00,0xef,0xe1,0xe0,0xe2,0x36,0x00
db 0x02,0x01,0x03,0x37,0x00,0x04,0x38,0xa7,0xc9,0x38,0x37,0xc9,0xe7

db 0xcd,0x1f,0x1c
db 0xcd,0x30,0x25

db 0x28,0x29,0xdf,0x22,0x5f,0x5c,0x2a,0x57,0x5c,0x7e,0xfe,0x2c,0x28
db 0x09,0x1e,0xe4,0xcd,0x86,0x1d,0x30,0x02,0xcf,0x0d

db 0xcd,0x77,0x00
db 0xcd,0x56,0x1c

db 0xdf,0x22,0x57,0x5c,0x2a,0x5f,0x5c,0xfd,0x36,0x26,0x00

db 0xcd,0x78,0x00

db 0xdf,0xfe
db 0x2c,0x28,0xc9

db 0xcd,0xee,0x1b

db 0xc9,0xcd,0x30,0x25,0x20,0x0b

db 0xcd,0xfb,0x24

db 0xfe
db 0x2c,0xc4,0xee,0x1b,0xe7,0x18,0xf5,0x3e,0xe4,0x47,0xed,0xb9,0x11,0x00,0x02,0xc3
db 0x8b,0x19

db 0xcd,0x99,0x1e

db 0x60,0x69

db 0xcd,0x6e,0x19

db 0x2b,0x22,0x57,0x5c,0xc9

db 0xcd,0x99,0x1e

db 0x78,0xb1,0x20,0x04,0xed,0x4b,0x78,0x5c,0xed,0x43,0x76,0x5c,0xc9,0x2a
db 0x6e,0x5c,0xfd,0x56,0x36,0x18,0x0c

go_to:
    call find_int2
    ld h,b
    ld l,c
    ld d,0
    ld a,h
    cp 0xf0
    jr nc,report_bbb
go_to_2:
    ld (NEWPPC),hl
    db 0xfd,0x72,0x0a
    ret
out:
    call two_param
    out (c),a
    ret
poke:
    call two_param
    ld (bc),a
    ret
two_param:
    db 0xcd,0xd5,0x2d
    jr c,report_bbb
    jr z,two_p_1
    neg
two_p_1:
    push af
    call find_int2
    pop af
    ret
find_int1:
    db 0xcd,0xd5,0x2d
    jr find_i_1
find_int2:
    db 0xcd,0xa2,0x2d
find_i_1:
    jr c,report_bbb
    ret z
report_bbb:
    rst 8
    db 0x0a

db 0xcd,0x67,0x1e

db 0x01,0x00,0x00

db 0xcd,0x45,0x1e

db 0x18,0x03

db 0xcd,0x99,0x1e

db 0x78
db 0xb1,0x20,0x04,0xed,0x4b,0xb2,0x5c,0xc5,0xed,0x5b,0x4b,0x5c,0x2a,0x59,0x5c,0x2b

db 0xcd,0xe5,0x19
db 0xcd,0x6b,0x0d

db 0x2a,0x65,0x5c,0x11,0x32,0x00,0x19,0xd1,0xed,0x52
db 0x30,0x08,0x2a,0xb4,0x5c,0xa7,0xed,0x52,0x30,0x02,0xcf,0x15,0xeb,0x22,0xb2,0x5c
db 0xd1,0xc1,0x36,0x3e,0x2b,0xf9,0xc5,0xed,0x73,0x3d,0x5c,0xeb,0xe9,0xd1,0xfd,0x66
db 0x0d,0x24,0xe3,0x33,0xed,0x4b,0x45,0x5c,0xc5,0xe5,0xed,0x73,0x3d,0x5c,0xd5,0xcd
db 0x67,0x1e,0x01,0x14,0x00,0x2a,0x65,0x5c,0x09,0x38,0x0a,0xeb,0x21,0x50,0x00,0x19
db 0x38,0x03,0xed,0x72,0xd8,0x2e,0x03,0xc3,0x55,0x00,0x01,0x00,0x00,0xcd,0x05,0x1f
db 0x44,0x4d,0xc9,0xc1,0xe1,0xd1,0x7a,0xfe,0x3e,0x28,0x0b,0x3b,0xe3,0xeb,0xed,0x73
db 0x3d,0x5c,0xc5,0xc3,0x73,0x1e,0xd5,0xe5,0xcf,0x06,0xcd,0x99,0x1e,0x76,0x0b,0x78
db 0xb1,0x28,0x0c,0x78,0xa1,0x3c,0x20,0x01,0x03,0xfd,0xcb,0x01,0x6e,0x28,0xee,0xfd
db 0xcb,0x01,0xae,0xc9,0x3e,0x7f,0xdb,0xfe,0x1f,0xd8,0x3e,0xfe,0xdb,0xfe,0x1f,0xc9
db 0xcd,0x30,0x25,0x28,0x05,0x3e,0xce,0xc3,0x39,0x1e,0xfd,0xcb,0x01,0xf6,0xcd,0x8d
db 0x2c,0x30,0x16,0xe7,0xfe,0x24,0x20,0x05,0xfd,0xcb,0x01,0xb6,0xe7,0xfe,0x28,0x20
db 0x3c,0xe7,0xfe,0x29,0x28,0x20,0xcd,0x8d,0x2c,0xd2,0x8a,0x1c,0xeb,0xe7,0xfe,0x24
db 0x20,0x02,0xeb,0xe7,0xeb,0x01,0x06,0x00,0xcd,0x55,0x16,0x23,0x23,0x36,0x0e,0xfe
db 0x2c,0x20,0x03,0xe7,0x18,0xe0,0xfe,0x29,0x20,0x13,0xe7,0xfe,0x3d,0x20,0x0e,0xe7
db 0x3a,0x3b,0x5c,0xf5,0xcd,0xfb,0x24,0xf1,0xfd,0xae,0x01,0xe6,0x40,0xc2,0x8a,0x1c
db 0xcd,0xee,0x1b,0xcd,0x30,0x25,0xe1,0xc8,0xe9,0x3e,0x03,0x18,0x02,0x3e,0x02,0xcd
db 0x30,0x25,0xc4,0x01,0x16

db 0xcd,0x4d,0x0d
db 0xcd,0xdf,0x1f
db 0xcd,0xee,0x1b

db 0xc9,0xdf

db 0xcd,0x45,0x20

db 0x28,0x0d

db 0xcd,0x4e,0x20

db 0x28,0xfb

db 0xcd,0xfc,0x1f
db 0xcd,0x4e,0x20

db 0x28,0xf3,0xfe,0x29,0xc8,0xcd,0xc3,0x1f,0x3e,0x0d,0xd7,0xc9,0xdf,0xfe,0xac,0x20
db 0x0d

db 0xcd,0x79,0x1c
db 0xcd,0xc3,0x1f
db 0xcd,0x07,0x23

db 0x3e,0x16,0x18,0x10,0xfe,0xad
db 0x20,0x12,0xe7

db 0xcd,0x82,0x1c
db 0xcd,0xc3,0x1f
db 0xcd,0x99,0x1e

db 0x3e,0x17,0xd7,0x79
db 0xd7,0x78,0xd7,0xc9

db 0xcd,0xf2,0x21

db 0xd0

db 0xcd,0x70,0x20

db 0xd0

db 0xcd,0xfb,0x24
db 0xcd,0xc3,0x1f

db 0xfd,0xcb,0x01,0x76,0xcc,0xf1,0x2b,0xc2,0xe3,0x2d,0x78,0xb1,0x0b,0xc8
db 0x1a,0x13,0xd7,0x18,0xf7,0xfe,0x29,0xc8,0xfe,0x0d,0xc8,0xfe,0x3a,0xc9,0xdf,0xfe
db 0x3b,0x28,0x14,0xfe,0x2c,0x20,0x0a,0xcd,0x30,0x25,0x28,0x0b,0x3e,0x06,0xd7,0x18
db 0x06,0xfe,0x27,0xc0,0xcd,0xf5,0x1f,0xe7,0xcd,0x45,0x20,0x20,0x01,0xc1,0xbf,0xc9
db 0xfe,0x23,0x37,0xc0,0xe7,0xcd,0x82,0x1c,0xa7,0xcd,0xc3,0x1f,0xcd,0x94,0x1e,0xfe
db 0x10,0xd2,0x0e,0x16,0xcd,0x01,0x16,0xa7,0xc9,0xcd,0x30,0x25,0x28,0x08,0x3e,0x01
db 0xcd,0x01,0x16,0xcd,0x6e,0x0d,0xfd,0x36,0x02,0x01,0xcd,0xc1,0x20,0xcd,0xee,0x1b
db 0xed,0x4b,0x88,0x5c,0x3a,0x6b,0x5c,0xb8,0x38,0x03,0x0e,0x21,0x47,0xed,0x43,0x88
db 0x5c,0x3e,0x19,0x90,0x32,0x8c,0x5c,0xfd,0xcb,0x02,0x86,0xcd,0xd9,0x0d,0xc3,0x6e
db 0x0d,0xcd,0x4e,0x20,0x28,0xfb,0xfe,0x28,0x20,0x0e,0xe7,0xcd,0xdf,0x1f,0xdf,0xfe
db 0x29,0xc2,0x8a,0x1c,0xe7,0xc3,0xb2,0x21,0xfe,0xca,0x20,0x11,0xe7,0xcd,0x1f,0x1c
db 0xfd,0xcb,0x37,0xfe,0xfd,0xcb,0x01,0x76,0xc2,0x8a,0x1c,0x18,0x0d,0xcd,0x8d,0x2c
db 0xd2,0xaf,0x21

db 0xcd,0x1f,0x1c

db 0xfd,0xcb,0x37,0xbe,0xcd,0x30,0x25,0xca,0xb2,0x21

db 0xcd,0xbf,0x16

db 0x21,0x71,0x5c,0xcb,0xb6,0xcb,0xee,0x01,0x01,0x00,0xcb,0x7e,0x20
db 0x0b,0x3a,0x3b,0x5c,0xe6,0x40,0x20,0x02,0x0e,0x03,0xb6,0x77,0xf7,0x36,0x0d,0x79
db 0x0f,0x0f,0x30,0x05,0x3e,0x22,0x12,0x2b,0x77,0x22,0x5b,0x5c,0xfd,0xcb,0x37,0x7e
db 0x20,0x2c,0x2a,0x5d,0x5c,0xe5,0x2a,0x3d,0x5c,0xe5,0x21,0x3a,0x21,0xe5,0xfd,0xcb
db 0x30,0x66,0x28,0x04,0xed,0x73,0x3d,0x5c,0x2a,0x61,0x5c,0xcd,0xa7,0x11,0xfd,0x36
db 0x00,0xff,0xcd,0x2c,0x0f,0xfd,0xcb,0x01,0xbe,0xcd,0xb9,0x21,0x18,0x03,0xcd,0x2c
db 0x0f,0xfd,0x36,0x22,0x00

db 0xcd,0xd6,0x21

db 0x20,0x0a

db 0xcd,0x1d,0x11

db 0xed,0x4b,0x82
db 0x5c

db 0xcd,0xd9,0x0d

db 0x21,0x71,0x5c,0xcb,0xae,0xcb,0x7e,0xcb,0xbe,0x20,0x1c,0xe1
db 0xe1,0x22,0x3d,0x5c,0xe1,0x22,0x5f,0x5c,0xfd,0xcb,0x01,0xfe,0xcd,0xb9,0x21,0x2a
db 0x5f,0x5c,0xfd,0x36,0x26,0x00,0x22,0x5d,0x5c,0x18,0x17,0x2a,0x63,0x5c,0xed,0x5b
db 0x61,0x5c,0x37,0xed,0x52,0x44,0x4d

db 0xcd,0xb2,0x2a
db 0xcd,0xff,0x2a
db 0x18,0x03
db 0xcd,0xfc,0x1f
db 0xcd,0x4e,0x20
db 0xca,0xc1,0x20,0xc9,0x2a,0x61,0x5c,0x22,0x5d,0x5c,0xdf
db 0xfe,0xe2,0x28,0x0c,0x3a,0x71,0x5c,0xcd,0x59,0x1c,0xdf,0xfe,0x0d,0xc8,0xcf,0x0b
db 0xcd,0x30,0x25
db 0xc8,0xcf,0x10,0x2a,0x51,0x5c,0x23,0x23,0x23,0x23,0x7e,0xfe,0x4b
db 0xc9,0xe7
db 0xcd,0xf2,0x21
db 0xd8,0xdf,0xfe,0x2c,0x28,0xf6,0xfe,0x3b,0x28,0xf2,0xc3
db 0x8a,0x1c,0xfe,0xd9,0xd8,0xfe,0xdf,0x3f,0xd8,0xf5,0xe7,0xf1,0xd6,0xc9,0xf5,0xcd
db 0x82,0x1c,0xf1,0xa7
db 0xcd,0xc3,0x1f
db 0xf5,0xcd,0x94,0x1e,0x57,0xf1,0xd7,0x7a,0xd7
db 0xc9,0xd6,0x11,0xce,0x00,0x28,0x1d,0xd6,0x02,0xce,0x00,0x28,0x56,0xfe,0x01,0x7a
db 0x06,0x01,0x20,0x04,0x07,0x07,0x06,0x04,0x4f,0x7a,0xfe,0x02,0x30,0x16,0x79,0x21
db 0x91,0x5c,0x18,0x38,0x7a,0x06,0x07,0x38,0x05,0x07,0x07,0x07,0x06,0x38,0x4f,0x7a
db 0xfe,0x0a,0x38,0x02,0xcf,0x13,0x21,0x8f,0x5c,0xfe,0x08,0x38,0x0b,0x7e,0x28,0x07
db 0xb0,0x2f,0xe6,0x24,0x28,0x01,0x78,0x4f,0x79,0xcd,0x6c,0x22,0x3e,0x07,0xba,0x9f
    call co_change

; Next P-FLAG is considered.

    rlca
    rlca
    and 0x50
    ld b,a
    ld a,8
    cp d
    sbc a,a
co_change:
    xor (hl)
    and b
    xor (hl)
    db 0x77
    db 0x23,0x78,0xc9,0x9f,0x7a,0x0f,0x06,0x80,0x20,0x03,0x0f,0x06,0x40,0x4f,0x7a,0xfe
    db 0x08,0x28,0x04,0xfe,0x02,0x30,0xbd,0x79,0x21,0x8f,0x5c
    call co_change

; The value in MASK-T is now considered.

    ld a,c
    rrca
    rrca
    rrca
db 0x18,0xd8,0xcd,0x94,0x1e,0xfe,0x08,0x30,0xa9,0xd3,0xfe,0x07,0x07,0x07
db 0xcb,0x6f,0x20,0x02,0xee,0x07,0x32,0x48,0x5c,0xc9,0x3e,0xaf,0x90,0xda,0xf9,0x24
db 0x47,0xa7,0x1f,0x37,0x1f,0xa7,0x1f,0xa8,0xe6,0xf8,0xa8,0x67,0x79,0x07,0x07,0x07
db 0xa8,0xe6,0xc7,0xa8,0x07,0x07,0x6f,0x79,0xe6,0x07,0xc9,0xcd,0x07,0x23,0xcd,0xaa
db 0x22,0x47,0x04,0x7e,0x07,0x10,0xfd,0xe6,0x01,0xc3,0x28,0x2d,0xcd,0x07,0x23,0xcd
db 0xe5,0x22,0xc3,0x4d,0x0d,0xed,0x43,0x7d,0x5c,0xcd,0xaa,0x22,0x47,0x04,0x3e,0xfe
db 0x0f,0x10,0xfd,0x47,0x7e,0xfd,0x4e,0x57,0xcb,0x41,0x20,0x01,0xa0,0xcb,0x51,0x20
db 0x02,0xa8,0x2f,0x77,0xc3,0xdb,0x0b,0xcd,0x14,0x23,0x47,0xc5,0xcd,0x14,0x23,0x59
db 0xc1,0x51,0x4f,0xc9,0xcd,0xd5,0x2d,0xda,0xf9,0x24,0x0e,0x01,0xc8,0x0e,0xff,0xc9
db 0xdf,0xfe,0x2c,0xc2,0x8a,0x1c,0xe7,0xcd,0x82,0x1c,0xcd,0xee,0x1b,0xef,0x2a,0x3d
db 0x38,0x7e,0xfe,0x81,0x30,0x05,0xef,0x02,0x38,0x18,0xa1,0xef,0xa3,0x38,0x36,0x83
db 0xef,0xc5,0x02,0x38,0xcd,0x7d,0x24,0xc5,0xef,0x31,0xe1,0x04,0x38,0x7e,0xfe,0x80
db 0x30,0x08,0xef,0x02,0x02,0x38,0xc1,0xc3,0xdc,0x22,0xef,0xc2,0x01,0xc0,0x02,0x03
db 0x01,0xe0,0x0f,0xc0,0x01,0x31,0xe0,0x01,0x31,0xe0,0xa0,0xc1,0x02,0x38,0xfd,0x34
db 0x62,0xcd,0x94,0x1e,0x6f,0xe5,0xcd,0x94,0x1e,0xe1,0x67,0x22,0x7d,0x5c,0xc1,0xc3
db 0x20,0x24,0xdf,0xfe,0x2c,0x28,0x06,0xcd,0xee,0x1b,0xc3,0x77,0x24,0xe7,0xcd,0x82
db 0x1c,0xcd,0xee,0x1b,0xef,0xc5,0xa2,0x04,0x1f,0x31,0x30,0x30,0x00,0x06,0x02,0x38
db 0xc3,0x77,0x24,0xc0,0x02,0xc1,0x02,0x31,0x2a,0xe1,0x01,0xe1,0x2a,0x0f,0xe0,0x05
db 0x2a,0xe0,0x01,0x3d,0x38,0x7e,0xfe,0x81,0x30,0x07,0xef,0x02,0x02,0x38,0xc3,0x77
db 0x24,0xcd,0x7d,0x24,0xc5,0xef,0x02,0xe1,0x01,0x05,0xc1,0x02,0x01,0x31,0xe1,0x04
db 0xc2,0x02,0x01,0x31,0xe1,0x04,0xe2,0xe5,0xe0,0x03,0xa2,0x04,0x31,0x1f,0xc5,0x02
db 0x20,0xc0,0x02,0xc2,0x02,0xc1,0xe5,0x04,0xe0,0xe2,0x04,0x0f,0xe1,0x01,0xc1,0x02
db 0xe0,0x04,0xe2,0xe5,0x04,0x03,0xc2,0x2a,0xe1,0x2a,0x0f,0x02,0x38,0x1a,0xfe,0x81
db 0xc1,0xda,0x77,0x24,0xc5,0xef,0x01,0x38,0x3a,0x7d,0x5c,0xcd,0x28,0x2d,0xef,0xc0
db 0x0f,0x01,0x38,0x3a,0x7e,0x5c,0xcd,0x28,0x2d,0xef,0xc5,0x0f,0xe0,0xe5,0x38,0xc1
db 0x05,0x28,0x3c,0x18,0x14,0xef,0xe1,0x31,0xe3,0x04,0xe2,0xe4,0x04,0x03,0xc1,0x02
db 0xe4,0x04,0xe2,0xe3,0x04,0x0f,0xc2,0x02,0x38,0xc5,0xef,0xc0,0x02,0xe1,0x0f,0x31
db 0x38,0x3a,0x7d,0x5c,0xcd,0x28,0x2d,0xef,0x03,0xe0,0xe2,0x0f,0xc0,0x01,0xe0,0x38
db 0x3a,0x7e,0x5c,0xcd,0x28,0x2d,0xef,0x03,0x38,0xcd,0xb7,0x24,0xc1,0x10,0xc6,0xef
db 0x02,0x02,0x01,0x38,0x3a,0x7d,0x5c,0xcd,0x28,0x2d,0xef,0x03,0x01,0x38,0x3a,0x7e
db 0x5c,0xcd,0x28,0x2d,0xef,0x03,0x38,0xcd,0xb7,0x24,0xc3,0x4d,0x0d,0xef,0x31,0x28
db 0x34,0x32,0x00,0x01,0x05,0xe5,0x01,0x05,0x2a,0x38,0xcd,0xd5,0x2d,0x38,0x06,0xe6
db 0xfc,0xc6,0x04,0x30,0x02,0x3e,0xfc,0xf5

db 0xcd,0x28,0x2d

db 0xef,0xe5,0x01,0x05,0x31
db 0x1f,0xc4,0x02,0x31,0xa2,0x04,0x1f,0xc1,0x01,0xc0,0x02,0x31,0x04,0x31,0x0f,0xa1
db 0x03,0x1b,0xc3,0x02,0x38,0xc1,0xc9,0xcd,0x07,0x23,0x79,0xb8,0x30,0x06,0x69,0xd5
db 0xaf,0x5f,0x18,0x07,0xb1,0xc8,0x68,0x41,0xd5,0x16,0x00,0x60,0x78,0x1f,0x85,0x38
db 0x03,0xbc,0x38,0x07,0x94,0x4f,0xd9,0xc1,0xc5,0x18,0x04,0x4f,0xd5,0xd9,0xc1,0x2a
db 0x7d,0x5c,0x78,0x84,0x47,0x79,0x3c,0x85,0x38,0x0d,0x28,0x0d,0x3d,0x4f,0xcd,0xe5
db 0x22,0xd9,0x79,0x10,0xd9,0xd1,0xc9,0x28,0xf3,0xcf,0x0a,0xdf,0x06,0x00,0xc5,0x4f
db 0x21,0x96,0x25,0xcd,0xdc,0x16,0x79,0xd2,0x84,0x26,0x06,0x00,0x4e,0x09,0xe9,0xcd
db 0x74,0x00,0x03,0xfe,0x0d,0xca,0x8a,0x1c,0xfe,0x22,0x20,0xf3,0xcd,0x74,0x00,0xfe
db 0x22,0xc9,0xe7,0xfe,0x28,0x20,0x06,0xcd,0x79,0x1c,0xdf,0xfe,0x29,0xc2,0x8a,0x1c
db 0xfd,0xcb,0x01,0x7e,0xc9,0xcd,0x07,0x23,0x2a,0x36,0x5c,0x11,0x00,0x01,0x19,0x79
db 0x0f,0x0f,0x0f,0xe6,0xe0,0xa8,0x5f,0x79,0xe6,0x18,0xee,0x40,0x57,0x06,0x60,0xc5
db 0xd5,0xe5,0x1a,0xae,0x28,0x04,0x3c,0x20,0x1a,0x3d,0x4f,0x06,0x07,0x14,0x23,0x1a
db 0xae,0xa9,0x20,0x0f,0x10,0xf7,0xc1,0xc1,0xc1,0x3e,0x80,0x90,0x01,0x01,0x00,0xf7
db 0x12,0x18,0x0a,0xe1,0x11,0x08,0x00,0x19,0xd1,0xc1,0x10,0xd3,0x48,0xc3,0xb2,0x2a
db 0xcd,0x07,0x23,0x79,0x0f,0x0f,0x0f,0x4f,0xe6,0xe0,0xa8,0x6f,0x79,0xe6,0x03,0xee
db 0x58,0x67,0x7e,0xc3,0x28,0x2d,0x22,0x1c,0x28,0x4f,0x2e,0xf2,0x2b,0x12,0xa8,0x56
db 0xa5,0x57,0xa7,0x84,0xa6,0x8f,0xc4,0xe6,0xaa,0xbf,0xab,0xc7,0xa9,0xce,0x00,0xe7
db 0xc3,0xff,0x24,0xdf,0x23,0xe5,0x01,0x00,0x00,0xcd,0x0f,0x25,0x20,0x1b,0xcd,0x0f
db 0x25,0x28,0xfb,0xcd,0x30,0x25,0x28,0x11,0xf7,0xe1,0xd5,0x7e,0x23,0x12,0x13,0xfe
db 0x22,0x20,0xf8,0x7e,0x23,0xfe,0x22,0x28,0xf2,0x0b,0xd1,0x21,0x3b,0x5c,0xcb,0xb6
db 0xcb,0x7e,0xc4,0xb2,0x2a,0xc3,0x12,0x27,0xe7,0xcd,0xfb,0x24,0xfe,0x29,0xc2,0x8a
db 0x1c,0xe7,0xc3,0x12,0x27,0xc3,0xbd,0x27,0xcd,0x30,0x25,0x28,0x28,0xed,0x4b,0x76
db 0x5c
db 0xcd,0x2b,0x2d
db 0xef,0xa1,0x0f,0x34,0x37,0x16,0x04,0x34,0x80,0x41,0x00,0x00
db 0x80,0x32,0x02,0xa1,0x03,0x31,0x38,0xcd,0xa2,0x2d,0xed,0x43,0x76,0x5c,0x7e,0xa7
db 0x28,0x03,0xd6,0x10,0x77,0x18,0x09,0xcd,0x30,0x25,0x28,0x04,0xef,0xa3,0x38,0x34
db 0xe7,0xc3,0xc3,0x26,0x01,0x5a,0x10,0xe7,0xfe,0x23,0xca,0x0d,0x27,0x21,0x3b,0x5c
db 0xcb,0xb6,0xcb,0x7e,0x28,0x1f

db 0xcd,0x8e,0x02

db 0x0e,0x00,0x20,0x13

db 0xcd,0x1e,0x03

db 0x30,0x0e,0x15,0x5f

db 0xcd,0x33,0x03

db 0xf5,0x01,0x01,0x00,0xf7,0xf1,0x12,0x0e,0x01
db 0x06,0x00

db 0xcd,0xb2,0x2a

db 0xc3,0x12,0x27,0xcd,0x22,0x25,0xc4,0x35,0x25,0xe7,0xc3
db 0xdb,0x25

db 0xcd,0x22,0x25

db 0xc4,0x80,0x25,0xe7,0x18,0x48,0xcd,0x22,0x25,0xc4,0xcb
db 0x22,0xe7,0x18,0x3f,0xcd,0x88,0x2c,0x30,0x56,0xfe,0x41,0x30,0x3c,0xcd,0x30,0x25
db 0x20,0x23,0xcd,0x9b,0x2c,0xdf,0x01,0x06,0x00

db 0xcd,0x55,0x16

db 0x23,0x36,0x0e,0x23
db 0xeb,0x2a,0x65,0x5c,0x0e,0x05,0xa7,0xed,0x42,0x22,0x65,0x5c,0xed,0xb0,0xeb,0x2b
db 0xcd,0x77,0x00,0x18,0x0e,0xdf,0x23,0x7e,0xfe,0x0e,0x20,0xfa,0x23,0xcd,0xb4,0x33
db 0x22,0x5d,0x5c,0xfd,0xcb,0x01,0xf6,0x18,0x14,0xcd,0xb2,0x28,0xda,0x2e,0x1c,0xcc
db 0x96,0x29,0x3a,0x3b,0x5c,0xfe,0xc0,0x38,0x04,0x23,0xcd,0xb4,0x33,0x18,0x33,0x01
db 0xdb,0x09,0xfe,0x2d,0x28,0x27,0x01,0x18,0x10,0xfe,0xae,0x28,0x20,0xd6,0xaf,0xda
db 0x8a,0x1c,0x01,0xf0,0x04,0xfe,0x14,0x28,0x14,0xd2,0x8a,0x1c,0x06,0x10,0xc6,0xdc
db 0x4f,0xfe,0xdf,0x30,0x02,0xcb,0xb1,0xfe,0xee,0x38,0x02,0xcb,0xb9,0xc5,0xe7,0xc3
db 0xff,0x24,0xdf,0xfe,0x28,0x20,0x0c,0xfd,0xcb,0x01,0x76,0x20,0x17,0xcd,0x52,0x2a
db 0xe7,0x18,0xf0,0x06,0x00,0x4f,0x21,0x95,0x27,0xcd,0xdc,0x16,0x30,0x06,0x4e,0x21
db 0xed,0x26,0x09,0x46,0xd1,0x7a,0xb8,0x38,0x3a,0xa7,0xca,0x18,0x00,0xc5,0x21,0x3b
db 0x5c,0x7b,0xfe,0xed,0x20,0x06,0xcb,0x76,0x20,0x02,0x1e,0x99,0xd5,0xcd,0x30,0x25
db 0x28,0x09,0x7b,0xe6,0x3f,0x47,0xef,0x3b,0x38,0x18,0x09,0x7b,0xfd,0xae,0x01,0xe6
db 0x40,0xc2,0x8a,0x1c,0xd1,0x21,0x3b,0x5c,0xcb,0xf6,0xcb,0x7b,0x20,0x02,0xcb,0xb6
db 0xc1,0x18,0xc1,0xd5,0x79,0xfd,0xcb,0x01,0x76,0x20,0x15,0xe6,0x3f,0xc6,0x08,0x4f
db 0xfe,0x10,0x20,0x04,0xcb,0xf1,0x18,0x08,0x38,0xd7,0xfe,0x17,0x28,0x02,0xcb,0xf9
db 0xc5,0xe7,0xc3,0xff,0x24,0x2b,0xcf,0x2d,0xc3,0x2a,0xc4,0x2f,0xc5,0x5e,0xc6,0x3d
db 0xce,0x3e,0xcc,0x3c,0xcd,0xc7,0xc9,0xc8,0xca,0xc9,0xcb,0xc5,0xc7,0xc6,0xc8,0x00
db 0x06,0x08,0x08,0x0a,0x02,0x03,0x05,0x05,0x05,0x05,0x05,0x05,0x06,0xcd,0x30,0x25
db 0x20,0x35,0xe7,0xcd,0x8d,0x2c,0xd2,0x8a,0x1c,0xe7,0xfe,0x24,0xf5,0x20,0x01,0xe7
db 0xfe,0x28,0x20,0x12,0xe7,0xfe,0x29,0x28,0x10,0xcd,0xfb,0x24,0xdf,0xfe,0x2c,0x20
db 0x03,0xe7,0x18,0xf5,0xfe,0x29,0xc2,0x8a,0x1c,0xe7,0x21,0x3b,0x5c,0xcb,0xb6,0xf1
db 0x28,0x02,0xcb,0xf6,0xc3,0x12,0x27,0xe7,0xe6,0xdf,0x47,0xe7,0xd6,0x24,0x4f,0x20
db 0x01,0xe7,0xe7,0xe5,0x2a,0x53,0x5c,0x2b,0x11,0xce,0x00,0xc5,0xcd,0x86,0x1d,0xc1
db 0x30,0x02,0xcf,0x18,0xe5,0xcd,0xab,0x28,0xe6,0xdf,0xb8,0x20,0x08,0xcd,0xab,0x28
db 0xd6,0x24,0xb9,0x28,0x0c,0xe1,0x2b,0x11,0x00,0x02,0xc5,0xcd,0x8b,0x19,0xc1,0x18
db 0xd7,0xa7,0xcc,0xab,0x28,0xd1,0xd1,0xed,0x53,0x5d,0x5c,0xcd,0xab,0x28,0xe5,0xfe
db 0x29,0x28,0x42,0x23,0x7e,0xfe,0x0e,0x16,0x40,0x28,0x07,0x2b,0xcd,0xab,0x28,0x23
db 0x16,0x00,0x23,0xe5,0xd5,0xcd,0xfb,0x24,0xf1,0xfd,0xae,0x01,0xe6,0x40,0x20,0x2b
db 0xe1,0xeb,0x2a,0x65,0x5c,0x01,0x05,0x00,0xed,0x42,0x22,0x65,0x5c,0xed,0xb0,0xeb
db 0x2b,0xcd,0xab,0x28,0xfe,0x29,0x28,0x0d,0xe5,0xdf,0xfe,0x2c,0x20,0x0d,0xe7,0xe1
db 0xcd,0xab,0x28,0x18,0xbe,0xe5,0xdf,0xfe,0x29,0x28,0x02,0xcf,0x19,0xd1,0xeb,0x22
db 0x5d,0x5c,0x2a,0x0b,0x5c,0xe3,0x22,0x0b,0x5c,0xd5,0xe7,0xe7,0xcd,0xfb,0x24,0xe1
db 0x22,0x5d,0x5c,0xe1,0x22,0x0b,0x5c,0xe7,0xc3,0x12,0x27,0x23,0x7e,0xfe,0x21,0x38
db 0xfa,0xc9,0xfd,0xcb,0x01,0xf6,0xdf,0xcd,0x8d,0x2c,0xd2,0x8a,0x1c,0xe5,0xe6,0x1f
db 0x4f,0xe7,0xe5,0xfe,0x28,0x28,0x28,0xcb,0xf1,0xfe,0x24,0x28,0x11,0xcb,0xe9,0xcd
db 0x88,0x2c,0x30,0x0f,0xcd,0x88,0x2c,0x30,0x16,0xcb,0xb1,0xe7,0x18,0xf6,0xe7,0xfd
db 0xcb,0x01,0xb6,0x3a,0x0c,0x5c,0xa7,0x28,0x06,0xcd,0x30,0x25,0xc2,0x51,0x29,0x41
db 0xcd,0x30,0x25,0x20,0x08,0x79,0xe6,0xe0,0xcb,0xff,0x4f,0x18,0x37,0x2a,0x4b,0x5c
db 0x7e,0xe6,0x7f,0x28,0x2d,0xb9,0x20,0x22,0x17,0x87,0xf2,0x3f,0x29,0x38,0x30,0xd1
db 0xd5,0xe5,0x23,0x1a,0x13,0xfe,0x20,0x28,0xfa,0xf6,0x20,0xbe,0x28,0xf4,0xf6,0x80
db 0xbe,0x20,0x06,0x1a,0xcd,0x88,0x2c,0x30,0x15,0xe1,0xc5,0xcd,0xb8,0x19,0xeb,0xc1
db 0x18,0xce,0xcb,0xf8,0xd1,0xdf,0xfe,0x28,0x28,0x09,0xcb,0xe8,0x18,0x0d

; Come here when an entry with the correct name was found.

    pop de
    pop de
    pop de
    push hl
    rst 0x18

; Note: This appears to have been done already at V-CHAR.

v_pass:
    db 0xcd,0x88,0x2c
    jr nc,v_end
    rst 0x20
    jr v_pass
v_end:
    pop hl
db 0xcb,0x10,0xcb,0x70
db 0xc9,0x2a,0x0b,0x5c,0x7e,0xfe,0x29,0xca,0xef,0x28,0x7e,0xf6,0x60,0x47,0x23,0x7e
db 0xfe,0x0e,0x28,0x07,0x2b,0xcd,0xab,0x28,0x23,0xcb,0xa8,0x78,0xb9,0x28,0x12,0x23
db 0x23,0x23,0x23,0x23,0xcd,0xab,0x28,0xfe,0x29,0xca,0xef,0x28,0xcd,0xab,0x28,0x18
db 0xd9,0xcb,0x69,0x20,0x0c,0x23,0xed,0x5b,0x65,0x5c,0xcd,0xc0,0x33,0xeb,0x22,0x65
db 0x5c,0xd1,0xd1,0xaf,0x3c,0xc9,0xaf,0x47,0xcb,0x79,0x20,0x4b,0xcb,0x7e,0x20,0x0e
db 0x3c,0x23,0x4e,0x23,0x46,0x23,0xeb,0xcd,0xb2,0x2a,0xdf,0xc3,0x49,0x2a,0x23,0x23
db 0x23,0x46,0xcb,0x71,0x28,0x0a,0x05,0x28,0xe8,0xeb,0xdf,0xfe,0x28,0x20,0x61,0xeb
db 0xeb,0x18,0x24,0xe5,0xdf,0xe1,0xfe,0x2c,0x28,0x20,0xcb,0x79,0x28,0x52,0xcb,0x71
db 0x20,0x06,0xfe,0x29,0x20,0x3c,0xe7,0xc9,0xfe,0x29,0x28,0x6c,0xfe,0xcc,0x20,0x32
db 0xdf,0x2b,0x22,0x5d,0x5c,0x18,0x5e,0x21,0x00,0x00,0xe5,0xe7,0xe1,0x79,0xfe,0xc0
db 0x20,0x09,0xdf,0xfe,0x29,0x28,0x51,0xfe,0xcc,0x28,0xe5,0xc5,0xe5,0xcd,0xee,0x2a
db 0xe3,0xeb,0xcd,0xcc,0x2a,0x38,0x19,0x0b,0xcd,0xf4,0x2a,0x09,0xd1,0xc1,0x10,0xb3
db 0xcb,0x79,0x20,0x66,0xe5,0xcb,0x71,0x20,0x13,0x42,0x4b,0xdf,0xfe,0x29,0x28,0x02
db 0xcf,0x02,0xe7,0xe1,0x11,0x05,0x00,0xcd,0xf4,0x2a,0x09,0xc9,0xcd,0xee,0x2a,0xe3
db 0xcd,0xf4,0x2a,0xc1,0x09,0x23,0x42,0x4b,0xeb,0xcd,0xb1,0x2a,0xdf,0xfe,0x29,0x28
db 0x07,0xfe,0x2c,0x20,0xdb,0xcd,0x52,0x2a,0xe7,0xfe,0x28,0x28,0xf8,0xfd,0xcb,0x01
db 0xb6,0xc9,0xcd,0x30,0x25,0xc4,0xf1,0x2b,0xe7,0xfe,0x29,0x28,0x50,0xd5,0xaf,0xf5
db 0xc5,0x11,0x01,0x00,0xdf,0xe1,0xfe,0xcc,0x28,0x17,0xf1,0xcd,0xcd,0x2a,0xf5,0x50
db 0x59,0xe5,0xdf,0xe1,0xfe,0xcc,0x28,0x09,0xfe,0x29,0xc2,0x8a,0x1c,0x62,0x6b,0x18
db 0x13,0xe5,0xe7,0xe1,0xfe,0x29,0x28,0x0c,0xf1,0xcd,0xcd,0x2a,0xf5,0xdf,0x60,0x69
db 0xfe,0x29,0x20,0xe6,0xf1,0xe3,0x19,0x2b,0xe3,0xa7,0xed,0x52,0x01,0x00,0x00,0x38
db 0x07,0x23,0xa7,0xfa,0x20,0x2a,0x44,0x4d,0xd1,0xfd,0xcb,0x01,0xb6,0xcd,0x30,0x25
db 0xc8,0xaf,0xfd,0xcb,0x01,0xb6,0xc5,0xcd,0xa9,0x33,0xc1,0x2a,0x65,0x5c,0x77,0x23
db 0x73,0x23,0x72,0x23,0x71,0x23,0x70,0x23,0x22,0x65,0x5c,0xc9,0xaf,0xd5,0xe5,0xf5
db 0xcd,0x82,0x1c,0xf1,0xcd,0x30,0x25,0x28,0x12,0xf5,0xcd,0x99,0x1e,0xd1,0x78,0xb1
db 0x37,0x28,0x05,0xe1,0xe5,0xa7,0xed,0x42,0x7a,0xde,0x00,0xe1,0xd1,0xc9,0xeb,0x23
db 0x5e,0x23,0x56,0xc9,0xcd,0x30,0x25,0xc8,0xcd,0xa9,0x30,0xda,0x15,0x1f,0xc9,0x2a
db 0x4d,0x5c,0xfd,0xcb,0x37,0x4e,0x28,0x5e,0x01,0x05,0x00,0x03,0x23,0x7e,0xfe,0x20
db 0x28,0xfa,0x30,0x0b,0xfe,0x10,0x38,0x11,0xfe,0x16,0x30,0x0d,0x23,0x18,0xed,0xcd
db 0x88,0x2c,0x38,0xe7,0xfe,0x24,0xca,0xc0,0x2b,0x79,0x2a,0x59,0x5c,0x2b,0xcd,0x55
db 0x16,0x23,0x23,0xeb,0xd5,0x2a,0x4d,0x5c,0x1b,0xd6,0x06,0x47,0x28,0x11,0x23,0x7e
db 0xfe,0x21,0x38,0xfa,0xf6,0x20,0x13,0x12,0x10,0xf4,0xf6,0x80,0x12,0x3e,0xc0,0x2a
db 0x4d,0x5c,0xae,0xf6,0x20,0xe1,0xcd,0xea,0x2b,0xe5,0xef,0x02,0x38,0xe1,0x01,0x05
db 0x00,0xa7,0xed,0x42,0x18,0x40,0xfd,0xcb,0x01,0x76,0x28,0x06,0x11,0x06,0x00,0x19
db 0x18,0xe7,0x2a,0x4d,0x5c,0xed,0x4b,0x72,0x5c,0xfd,0xcb,0x37,0x46,0x20,0x30,0x78
db 0xb1,0xc8,0xe5,0xf7,0xd5,0xc5,0x54,0x5d,0x23,0x36,0x20,0xed,0xb8,0xe5,0xcd,0xf1
db 0x2b,0xe1,0xe3,0xa7,0xed,0x42,0x09,0x30,0x02,0x44,0x4d,0xe3,0xeb,0x78,0xb1,0x28
db 0x02,0xed,0xb0,0xc1,0xd1,0xe1,0xeb,0x78,0xb1,0xc8,0xd5,0xed,0xb0,0xe1,0xc9,0x2b
db 0x2b,0x2b,0x7e,0xe5,0xc5,0xcd,0xc6,0x2b,0xc1,0xe1,0x03,0x03,0x03,0xc3,0xe8,0x19
db 0x3e,0xdf,0x2a,0x4d,0x5c,0xa6,0xf5,0xcd,0xf1,0x2b,0xeb,0x09,0xc5,0x2b,0x22,0x4d
db 0x5c,0x03,0x03,0x03,0x2a,0x59,0x5c,0x2b

db 0xcd,0x55,0x16

db 0x2a,0x4d,0x5c,0xc1,0xc5
db 0x03,0xed,0xb8,0xeb,0x23,0xc1,0x70,0x2b,0x71,0xf1,0x2b,0x77,0x2a,0x59,0x5c,0x2b
db 0xc9,0x2a,0x65,0x5c,0x2b,0x46,0x2b,0x4e,0x2b,0x56,0x2b,0x5e,0x2b,0x7e,0x22,0x65
db 0x5c,0xc9,0xcd,0xb2,0x28,0xc2,0x8a,0x1c,0xcd,0x30,0x25,0x20,0x08,0xcb,0xb1,0xcd
db 0x96,0x29,0xcd,0xee,0x1b,0x38,0x08,0xc5,0xcd,0xb8,0x19,0xcd,0xe8,0x19,0xc1,0xcb
db 0xf9,0x06,0x00,0xc5,0x21,0x01,0x00,0xcb,0x71,0x20,0x02,0x2e,0x05,0xeb,0xe7,0x26
db 0xff,0xcd,0xcc,0x2a,0xda,0x20,0x2a,0xe1,0xc5,0x24,0xe5,0x60,0x69,0xcd,0xf4,0x2a
db 0xeb,0xdf,0xfe,0x2c,0x28,0xe8,0xfe,0x29,0x20,0xbb,0xe7,0xc1,0x79,0x68,0x26,0x00
db 0x23,0x23,0x29,0x19,0xda,0x15,0x1f,0xd5,0xc5,0xe5,0x44,0x4d,0x2a,0x59,0x5c,0x2b
db 0xcd,0x55,0x16,0x23,0x77,0xc1,0x0b,0x0b,0x0b,0x23,0x71,0x23,0x70,0xc1,0x78,0x23
db 0x77,0x62,0x6b,0x1b,0x36,0x00,0xcb,0x71,0x28,0x02,0x36,0x20,0xc1,0xed,0xb8,0xc1
db 0x70,0x2b,0x71,0x2b,0x3d,0x20,0xf8,0xc9,0xcd,0x1b,0x2d,0x3f,0xd8,0xfe,0x41,0x3f
db 0xd0,0xfe,0x5b,0xd8,0xfe,0x61,0x3f,0xd0,0xfe,0x7b,0xc9,0xfe,0xc4,0x20,0x19,0x11
db 0x00,0x00,0xe7,0xd6,0x31,0xce,0x00,0x20,0x0a,0xeb,0x3f,0xed,0x6a,0xda,0xad,0x31
db 0xeb,0x18,0xef,0x42,0x4b,0xc3,0x2b,0x2d,0xfe,0x2e,0x28,0x0f,0xcd,0x3b,0x2d,0xfe
db 0x2e,0x20,0x28,0xe7
db 0xcd,0x1b,0x2d
db 0x38,0x22,0x18,0x0a,0xe7

db 0xcd,0x1b,0x2d

db 0xda
db 0x8a,0x1c,0xef,0xa0,0x38,0xef,0xa1,0xc0,0x02,0x38,0xdf

db 0xcd,0x22,0x2d

db 0x38,0x0b
db 0xef,0xe0,0xa4,0x05,0xc0,0x04,0x0f,0x38,0xe7,0x18,0xef,0xfe,0x45,0x28,0x03,0xfe
db 0x65,0xc0,0x06,0xff,0xe7,0xfe,0x2b,0x28,0x05,0xfe,0x2d,0x20,0x02,0x04,0xe7,0xcd
db 0x1b,0x2d,0x38,0xcb,0xc5

db 0xcd,0x3b,0x2d
db 0xcd,0xd5,0x2d

db 0xc1,0xda,0xad,0x31,0xa7
db 0xfa,0xad,0x31,0x04,0x28,0x02,0xed,0x44,0xc3,0x4f,0x2d,0xfe,0x30,0xd8,0xfe,0x3a
db 0x3f,0xc9

db 0xcd,0x1b,0x2d

db 0xd8,0xd6,0x30,0x4f,0x06,0x00,0xfd,0x21,0x3a,0x5c,0xaf
db 0x5f,0x51,0x48,0x47,0xcd,0xb6,0x2a,0xef,0x38,0xa7,0xc9,0xf5,0xef,0xa0,0x38,0xf1

db 0xcd,0x22,0x2d

db 0xd8,0xef,0x01,0xa4,0x04,0x0f,0x38,0xcd,0x74,0x00,0x18,0xf1,0x07
db 0x0f,0x30,0x02,0x2f,0x3c,0xf5,0x21,0x92,0x5c,0xcd,0x0b,0x35,0xef,0xa4,0x38,0xf1
db 0xcb,0x3f,0x30,0x0d,0xf5,0xef,0xc1,0xe0,0x00,0x04,0x04,0x33,0x02,0x05,0xe1,0x38
db 0xf1,0x28,0x08,0xf5,0xef,0x31,0x04,0x38,0xf1,0x18,0xe5,0xef,0x02,0x38,0xc9,0x23
db 0x4e,0x23,0x7e,0xa9,0x91,0x5f,0x23,0x7e,0x89,0xa9,0x57,0xc9,0x0e,0x00,0xe5,0x36
db 0x00,0x23,0x71,0x23,0x7b,0xa9,0x91,0x77,0x23,0x7a,0x89,0xa9,0x77,0x23,0x36,0x00
db 0xe1,0xc9,0xef,0x38,0x7e,0xa7,0x28,0x05,0xef,0xa2,0x0f,0x27,0x38,0xef,0x02,0x38
db 0xe5,0xd5,0xeb,0x46,0xcd,0x7f,0x2d,0xaf,0x90,0xcb,0x79,0x42,0x4b,0x7b,0xd1,0xe1
db 0xc9,0x57,0x17,0x9f,0x5f,0x4f,0xaf,0x47,0xcd,0xb6,0x2a,0xef,0x34,0xef,0x1a,0x20
db 0x9a,0x85,0x04,0x27,0x38

db 0xcd,0xa2,0x2d

db 0xd8,0xf5,0x05,0x04,0x28,0x03,0xf1,0x37
db 0xc9,0xf1,0xc9,0xef,0x31,0x36,0x00,0x0b,0x31,0x37,0x00,0x0d,0x02,0x38,0x3e,0x30
db 0xd7,0xc9,0x2a,0x38,0x3e,0x2d,0xd7,0xef,0xa0,0xc3,0xc4,0xc5,0x02,0x38,0xd9,0xe5
db 0xd9,0xef,0x31,0x27,0xc2,0x03,0xe2,0x01,0xc2,0x02,0x38,0x7e,0xa7,0x20,0x47

db 0xcd,0x7f,0x2d
db 0x06,0x10,0x7a,0xa7,0x20,0x06,0xb3,0x28,0x09,0x53,0x06,0x08,0xd5,0xd9
db 0xd1,0xd9,0x18,0x57,0xef,0xe2,0x38,0x7e,0xd6,0x7e

db 0xcd,0xc1,0x2d

db 0x57,0x3a,0xac
db 0x5c,0x92,0x32,0xac,0x5c,0x7a

db 0xcd,0x4f,0x2d

db 0xef,0x31,0x27,0xc1,0x03,0xe1,0x38

db 0xcd,0xd5,0x2d

db 0xe5,0x32,0xa1,0x5c,0x3d,0x17,0x9f,0x3c,0x21,0xab,0x5c,0x77,0x23
db 0x86,0x77,0xe1,0xc3,0xcf,0x2e,0xd6,0x80,0xfe,0x1c,0x38,0x13

db 0xcd,0xc1,0x2d

db 0xd6
db 0x07,0x47,0x21,0xac,0x5c,0x86,0x77,0x78,0xed,0x44

db 0xcd,0x4f,0x2d

db 0x18,0x92
db 0xeb

db 0xcd,0xba,0x2f

db 0xd9,0xcb,0xfa,0x7d,0xd9,0xd6,0x80,0x47,0xcb,0x23,0xcb,0x12,0xd9
db 0xcb,0x13,0xcb,0x12,0xd9,0x21,0xaa,0x5c,0x0e,0x05,0x7e,0x8f,0x27,0x77,0x2b,0x0d
db 0x20,0xf8,0x10,0xe7,0xaf,0x21,0xa6,0x5c,0x11,0xa1,0x5c,0x06,0x09,0xed,0x6f,0x0e
db 0xff,0xed,0x6f,0x20,0x04,0x0d,0x0c,0x20,0x0a,0x12,0x13,0xfd,0x34,0x71,0xfd,0x34
db 0x72,0x0e,0x00,0xcb,0x40,0x28,0x01,0x23,0x10,0xe7,0x3a,0xab,0x5c,0xd6,0x09,0x38
db 0x0a,0xfd,0x35,0x71,0x3e,0x04,0xfd,0xbe,0x6f,0x18,0x41,0xef,0x02,0xe2,0x38,0xeb

db 0xcd,0xba,0x2f

db 0xd9,0x3e,0x80,0x95,0x2e,0x00,0xcb,0xfa,0xd9

db 0xcd,0xdd,0x2f

db 0xfd
db 0x7e,0x71,0xfe,0x08,0x38,0x06,0xd9,0xcb,0x12,0xd9,0x18,0x20,0x01,0x00,0x02,0x7b

db 0xcd,0x8b,0x2f

db 0x5f,0x7a,0xcd,0x8b,0x2f,0x57,0xc5,0xd9,0xc1,0x10,0xf1,0x21,0xa1
db 0x5c,0x79,0xfd,0x4e,0x71,0x09,0x77,0xfd,0x34,0x71,0x18,0xd3,0xf5,0x21,0xa1,0x5c
db 0xfd,0x4e,0x71,0x06,0x00,0x09,0x41,0xf1,0x2b,0x7e,0xce,0x00,0x77,0xa7,0x28,0x05
db 0xfe,0x0a,0x3f,0x30,0x08,0x10,0xf1,0x36,0x01,0x04,0xfd,0x34,0x72,0xfd,0x70,0x71
db 0xef,0x02,0x38,0xd9,0xe1,0xd9,0xed,0x4b,0xab,0x5c,0x21,0xa1,0x5c,0x78,0xfe,0x09
db 0x38,0x04,0xfe,0xfc,0x38,0x26,0xa7,0xcc,0xef,0x15,0xaf,0x90,0xfa,0x52,0x2f,0x47
db 0x18,0x0c,0x79,0xa7,0x28,0x03,0x7e,0x23,0x0d,0xcd,0xef,0x15,0x10,0xf4,0x79,0xa7
db 0xc8,0x04,0x3e,0x2e,0xd7,0x3e,0x30,0x10,0xfb,0x41,0x18,0xe6,0x50,0x15,0x06,0x01
db 0xcd,0x4a,0x2f
    ld a,0x45
db 0xd7,0x4a,0x79,0xa7,0xf2,0x83,0x2f,0xed,0x44,0x4f,0x3e
db 0x2d,0x18,0x02,0x3e,0x2b,0xd7,0x06,0x00,0xc3,0x1b,0x1a,0xd5,0x6f,0x26,0x00,0x5d
db 0x54,0x29,0x29,0x19,0x29,0x59,0x19,0x4c,0x7d,0xd1,0xc9,0x7e,0x36,0x00,0xa7,0xc8
db 0x23,0xcb,0x7e,0xcb,0xfe,0x2b,0xc8,0xc5,0x01,0x05,0x00,0x09,0x41,0x4f,0x37,0x2b
db 0x7e,0x2f,0xce,0x00,0x77,0x10,0xf8,0x79,0xc1,0xc9,0xe5,0xf5,0x4e,0x23,0x46,0x77
db 0x23,0x79,0x4e,0xc5,0x23,0x4e,0x23,0x46,0xeb,0x57,0x5e,0xd5,0x23,0x56,0x23,0x5e
db 0xd5,0xd9,0xd1,0xe1,0xc1,0xd9,0x23,0x56,0x23,0x5e,0xf1,0xe1,0xc9,0xa7,0xc8,0xfe
db 0x21,0x30,0x16,0xc5,0x47,0xd9,0xcb,0x2d,0xcb,0x1a,0xcb,0x1b,0xd9,0xcb,0x1a,0xcb
db 0x1b,0x10,0xf2,0xc1,0xd0
    call add_back
    ret nz
    exx
    xor a
    ld l,0
    ld d,a
    ld e,l
    exx
    ld de,0
    ret
add_back:
    inc e
    ret nz
    inc d
    ret nz
    exx
    inc e
    jr nz,all_added
    inc d
all_added:
    exx
    ret
;subtract:
    ex de,hl
    db 0xcd,0x6e,0x34
    ex de,hl
;addition:
    ld a,(de)
    or (hl)
db 0x20,0x26,0xd5,0x23,0xe5,0x23,0x5e,0x23,0x56,0x23
db 0x23,0x23,0x7e,0x23,0x4e,0x23,0x46,0xe1,0xeb,0x09,0xeb,0x8e,0x0f,0xce,0x00,0x20
db 0x0b,0x9f,0x77,0x23,0x73,0x23,0x72,0x2b,0x2b,0x2b,0xd1,0xc9,0x2b,0xd1
db 0xcd,0x93,0x32
db 0xd9,0xe5,0xd9,0xd5,0xe5
db 0xcd,0x9b,0x2f
db 0x47,0xeb
db 0xcd,0x9b,0x2f
db 0x4f,0xb8
db 0x30,0x03,0x78,0x41,0xeb,0xf5,0x90,0xcd,0xba,0x2f
db 0xcd,0xdd,0x2f
db 0xf1,0xe1,0x77
db 0xe5,0x68,0x61,0x19,0xd9,0xeb,0xed,0x4a,0xeb,0x7c,0x8d,0x6f,0x1f,0xad,0xd9,0xeb
db 0xe1,0x1f,0x30,0x08,0x3e,0x01,0xcd,0xdd,0x2f,0x34,0x28,0x23,0xd9,0x7d,0xe6,0x80
db 0xd9,0x23,0x77,0x2b,0x28,0x1f,0x7b,0xed,0x44,0x3f,0x5f,0x7a,0x2f,0xce,0x00,0x57
db 0xd9,0x7b,0x2f,0xce,0x00,0x5f,0x7a,0x2f,0xce,0x00,0x30,0x07,0x1f,0xd9,0x34,0xca
db 0xad,0x31,0xd9,0x57,0xd9,0xaf,0xc3,0x55,0x31,0xc5,0x06,0x10,0x7c,0x4d,0x21,0x00
db 0x00,0x29,0x38,0x0a,0xcb,0x11,0x17,0x30,0x03,0x19,0x38,0x02,0x10,0xf3,0xc1,0xc9
db 0xcd,0xe9,0x34,0xd8,0x23,0xae,0xcb,0xfe,0x2b,0xc9,0x1a,0xb6,0x20,0x22,0xd5,0xe5
db 0xd5,0xcd,0x7f,0x2d,0xeb,0xe3,0x41
db 0xcd,0x7f,0x2d
db 0x78,0xa9,0x4f,0xe1,0xcd,0xa9
db 0x30,0xeb,0xe1,0x38,0x0a,0x7a,0xb3,0x20,0x01,0x4f,0xcd,0x8e,0x2d,0xd1,0xc9,0xd1
db 0xcd,0x93,0x32,0xaf,0xcd,0xc0,0x30,0xd8,0xd9,0xe5,0xd9,0xd5,0xeb,0xcd,0xc0,0x30
db 0xeb,0x38,0x5a,0xe5
db 0xcd,0xba,0x2f
db 0x78,0xa7,0xed,0x62,0xd9,0xe5,0xed,0x62,0xd9
db 0x06,0x21,0x18,0x11,0x30,0x05,0x19,0xd9,0xed,0x5a,0xd9,0xd9,0xcb,0x1c,0xcb,0x1d
db 0xd9,0xcb,0x1c,0xcb,0x1d,0xd9,0xcb,0x18,0xcb,0x19,0xd9,0xcb,0x19,0x1f,0x10,0xe4
db 0xeb,0xd9,0xeb,0xd9,0xc1,0xe1,0x78,0x81,0x20,0x01,0xa7,0x3d,0x3f,0x17,0x3f,0x1f
db 0xf2,0x46,0x31,0x30,0x68,0xa7,0x3c,0x20,0x08,0x38,0x06,0xd9,0xcb,0x7a,0xd9,0x20
db 0x5c,0x77,0xd9,0x78,0xd9,0x30,0x15,0x7e,0xa7,0x3e,0x80,0x28,0x01,0xaf,0xd9,0xa2
db 0xcd,0xfb,0x2f,0x07,0x77,0x38,0x2e,0x23,0x77,0x2b,0x18,0x29,0x06,0x20,0xd9,0xcb
db 0x7a,0xd9,0x20,0x12,0x07,0xcb,0x13,0xcb,0x12,0xd9,0xcb,0x13,0xcb,0x12,0xd9,0x35
db 0x28,0xd7,0x10,0xea,0x18,0xd7
norml_now:
    rla
    jr nc,oflow_clr
    db 0xcd,0x04,0x30
    jr nz,oflow_clr
    exx
    ld d,0x80
    exx
    inc (hl)
    db 0x28,0x18
oflow_clr:
    push hl
    inc hl
    exx
    push de
    exx
    pop bc
    ld a,b
    rla
db 0xcb,0x16,0x1f
db 0x77,0x23,0x71,0x23,0x72,0x23,0x73,0xe1,0xd1
    exx
    pop hl
    exx
    ret
    rst 0x08
    db 0x05
division:
    db 0xcd,0x93,0x32
    ex de,hl
    xor a
    db 0xcd,0xc0,0x30
    db 0x38,0xf4,0xeb
    db 0xcd,0xc0,0x30
    ret c
    exx
    push hl
    exx
    push de
    push hl
    db 0xcd,0xba,0x2f
    exx
    push hl
    ld h,b
    ld l,c
    exx
    ld h,c
    ld l,b
    xor a
    ld b,0xdf
    jr div_start

; Now enter the division loop.

div_loop:
    rla
    rl c
    exx
    rl c
    rl b
    exx
div_34th:
    add hl,hl
    exx
    adc hl,hl
    exx
    db 0x38,0x10
div_start:
    sbc hl,de
db 0xd9,0xed,0x52,0xd9,0x30,0x0f,0x19,0xd9,0xed,0x5a,0xd9,0xa7
db 0x18,0x08,0xa7,0xed,0x52,0xd9,0xed,0x52,0xd9,0x37,0x04,0xfa,0xd2,0x31,0xf5,0x28
db 0xe1,0x5f,0x51,0xd9,0x59,0x50,0xf1,0xcb,0x18,0xf1,0xcb,0x18,0xd9,0xc1,0xe1,0x78
db 0x91,0xc3,0x3d,0x31,0x7e,0xa7,0xc8,0xfe,0x81,0x30,0x06,0x36,0x00,0x3e,0x20,0x18
db 0x51,0xfe,0x91,0x20,0x1a,0x23,0x23,0x23,0x3e,0x80,0xa6,0x2b,0xb6,0x2b,0x20,0x03
db 0x3e,0x80,0xae,0x2b,0x20,0x36,0x77,0x23,0x36,0xff,0x2b,0x3e,0x18,0x18,0x33,0x30
db 0x2c,0xd5,0x2f,0xc6,0x91,0x23,0x56,0x23,0x5e,0x2b,0x2b,0x0e,0x00,0xcb,0x7a,0x28
db 0x01,0x0d,0xcb,0xfa,0x06,0x08,0x90,0x80,0x38,0x04,0x5a,0x16,0x00,0x90,0x28,0x07
db 0x47,0xcb,0x3a,0xcb,0x1b,0x10,0xfa

db 0xcd,0x8e,0x2d

db 0xd1,0xc9,0x7e,0xd6,0xa0,0xf0
db 0xed,0x44,0xd5,0xeb,0x2b,0x47,0xcb,0x38,0xcb,0x38,0xcb,0x38,0x28,0x05,0x36,0x00
db 0x2b,0x10,0xfb,0xe6,0x07,0x28,0x09,0x47,0x3e,0xff,0xcb,0x27,0x10,0xfc,0xa6,0x77
db 0xeb,0xd1,0xc9

db 0xcd,0x96,0x32

db 0xeb,0x7e,0xa7,0xc0,0xd5,0xcd,0x7f,0x2d,0xaf,0x23
db 0x77,0x2b,0x77,0x06,0x91,0x7a,0xa7,0x20,0x08,0xb3,0x42,0x28,0x10,0x53,0x58,0x06
db 0x89,0xeb,0x05,0x29,0x30,0xfc,0xcb,0x09,0xcb,0x1c,0xcb,0x1d,0xeb,0x2b,0x73,0x2b
db 0x72,0x2b,0x70,0xd1,0xc9,0x00,0xb0,0x00,0x40,0xb0,0x00,0x01,0x30,0x00,0xf1,0x49
db 0x0f,0xda,0xa2,0x40,0xb0,0x00,0x0a,0x8f,0x36,0x3c,0x34,0xa1,0x33,0x0f,0x30,0xca
db 0x30,0xaf,0x31,0x51,0x38,0x1b,0x35,0x24,0x35,0x3b,0x35,0x3b,0x35,0x3b,0x35,0x3b
db 0x35,0x3b,0x35,0x3b,0x35,0x14,0x30,0x2d,0x35,0x3b,0x35,0x3b,0x35,0x3b,0x35,0x3b
db 0x35,0x3b,0x35,0x3b,0x35,0x9c,0x35,0xde,0x35,0xbc,0x34,0x45,0x36,0x6e,0x34,0x69
db 0x36,0xde,0x35,0x74,0x36,0xb5,0x37,0xaa,0x37,0xda,0x37,0x33,0x38,0x43,0x38,0xe2
db 0x37,0x13,0x37,0xc4,0x36,0xaf,0x36,0x4a,0x38,0x92,0x34,0x6a,0x34,0xac,0x34,0xa5
db 0x34,0xb3,0x34,0x1f,0x36,0xc9,0x35,0x01,0x35,0xc0,0x33,0xa0,0x36,0x86,0x36,0xc6
db 0x33,0x7a,0x36,0x06,0x35,0xf9,0x34,0x9b,0x36,0x83,0x37,0x14,0x32,0xa2,0x33,0x4f
db 0x2d,0x97,0x32,0x49,0x34,0x1b,0x34,0x2d,0x34,0x0f,0x34

calculate:
    db 0xcd,0xbf,0x35
gen_ent_1:
    ld a,b
    ld (0x5c67),a
gen_ent_2:
    exx
    ex (sp),hl
    exx
db 0xed,0x53,0x65,0x5c,0xd9,0x7e,0x23,0xe5,0xa7,0xf2,0x80
db 0x33,0x57,0xe6,0x60,0x0f,0x0f,0x0f,0x0f,0xc6,0x7c,0x6f,0x7a,0xe6,0x1f,0x18,0x0e
db 0xfe,0x18,0x30,0x08,0xd9,0x01,0xfb,0xff,0x54,0x5d,0x09,0xd9,0x07,0x6f,0x11,0xd7
db 0x32,0x26,0x00,0x19,0x5e,0x23,0x56,0x21,0x65,0x33,0xe3,0xd5,0xd9,0xed,0x4b,0x66
db 0x5c,0xc9,0xf1,0x3a,0x67,0x5c,0xd9,0x18,0xc3

test_5_sp:
    push de
    push hl
    ld bc,5
    db 0xcd,0x05,0x1f
    pop hl
    pop de
    ret
stack_num:
    ld de,(STKEND)
    call move_fp
    ld (STKEND),de
    ret
move_fp:
    call test_5_sp
    ldir
    ret
stk_data:
    ld h,d
    ld l,e
stk_const:
    call test_5_sp
    exx
    push hl
    exx
    ex (sp),hl
    push bc
    ld a,(hl)
    and 0xc0
    rlca
    rlca
    db 0x4f,0x0c,0x7e,0xe6,0x3f,0x20,0x02,0x23,0x7e,0xc6,0x50
    db 0x12,0x3e,0x05,0x91,0x23,0x13,0x06,0x00,0xed,0xb0,0xc1,0xe3,0xd9,0xe1,0xd9,0x47
    db 0xaf,0x05,0xc8,0x12,0x13,0x18,0xfa,0xa7
skip_next:
    ret z
    push af
    push de
    ld de,0
    call stk_const
    pop de
    pop af
    dec a
    jr skip_next
loc_mem:
    ld c,a
    rlca
    rlca
    add a,c
    ld c,a
    ld b,0
    add hl,bc
    ret
    push de
db 0x2a,0x68,0x5c
    call loc_mem
    call move_fp
db 0xe1,0xc9,0x62,0x6b,0xd9,0xe5,0x21
db 0xc5,0x32,0xd9
db 0xcd,0xf7,0x33
db 0xcd,0xc8,0x33
db 0xd9,0xe1,0xd9,0xc9,0xe5,0xeb,0x2a
db 0x68,0x5c,0xcd,0x06,0x34,0xeb
db 0xcd,0xc0,0x33
db 0xeb,0xe1,0xc9,0x06,0x05,0x1a,0x4e
db 0xeb,0x12,0x71,0x23,0x13,0x10,0xf7,0xeb,0xc9,0x47,0xcd,0x5e,0x33,0x31,0x0f,0xc0
db 0x02,0xa0,0xc2,0x31,0xe0,0x04,0xe2,0xc1,0x03,0x38,0xcd,0xc6,0x33,0xcd,0x62,0x33
db 0x0f,0x01,0xc2,0x02,0x35,0xee,0xe1,0x03,0x38,0xc9,0x06,0xff,0x18,0x06,0xcd,0xe9
db 0x34,0xd8,0x06,0x00,0x7e,0xa7,0x28,0x0b,0x23,0x78,0xe6,0x80,0xb6,0x17,0x3f,0x1f
db 0x77,0x2b,0xc9,0xd5,0xe5

db 0xcd,0x7f,0x2d

db 0xe1,0x78,0xb1,0x2f,0x4f

db 0xcd,0x8e,0x2d

db 0xd1,0xc9

db 0xcd,0xe9,0x34

db 0xd8,0xd5,0x11,0x01,0x00,0x23,0xcb,0x16,0x2b,0x9f,0x4f

db 0xcd,0x8e,0x2d

db 0xd1,0xc9

db 0xcd,0x99,0x1e

db 0xed,0x78,0x18,0x04

db 0xcd,0x99,0x1e

db 0x0a
db 0xc3,0x28,0x2d,0xcd,0x99,0x1e,0x21,0x2b,0x2d,0xe5,0xc5,0xc9,0xcd,0xf1,0x2b,0x0b
db 0x78,0xb1,0x20,0x23,0x1a,0xcd,0x8d,0x2c,0x38,0x09,0xd6,0x90,0x38,0x19,0xfe,0x15
db 0x30,0x15,0x3c,0x3d,0x87,0x87,0x87,0xfe,0xa8,0x30,0x0c,0xed,0x4b,0x7b,0x5c,0x81
db 0x4f,0x30,0x01,0x04,0xc3,0x2b,0x2d,0xcf,0x09,0xe5,0xc5,0x47,0x7e,0x23,0xb6,0x23
db 0xb6,0x23,0xb6,0x78,0xc1,0xe1,0xc0,0x37,0xc9,0xcd,0xe9,0x34,0xd8,0x3e,0xff,0x18
db 0x06,0xcd,0xe9,0x34,0x18,0x05,0xaf,0x23,0xae,0x2b,0x07,0xe5,0x3e,0x00,0x77,0x23
db 0x77,0x23,0x17,0x77,0x1f,0x23,0x77,0x23,0x77,0xe1,0xc9,0xeb,0xcd,0xe9,0x34,0xeb
db 0xd8,0x37,0x18,0xe7,0xeb,0xcd,0xe9,0x34,0xeb,0xd0,0xa7,0x18,0xde,0xeb,0xcd,0xe9
db 0x34,0xeb,0xd0,0xd5,0x1b,0xaf,0x12,0x1b,0x12,0xd1,0xc9,0x78,0xd6,0x08,0xcb,0x57
db 0x20,0x01,0x3d,0x0f,0x30,0x08,0xf5,0xe5,0xcd,0x3c,0x34,0xd1,0xeb,0xf1,0xcb,0x57
db 0x20,0x07,0x0f,0xf5,0xcd,0x0f,0x30,0x18,0x33,0x0f,0xf5,0xcd,0xf1,0x2b,0xd5,0xc5
db 0xcd,0xf1,0x2b,0xe1,0x7c,0xb5,0xe3,0x78,0x20,0x0b,0xb1,0xc1,0x28,0x04,0xf1,0x3f
db 0x18,0x16,0xf1,0x18,0x13,0xb1,0x28,0x0d,0x1a,0x96,0x38,0x09,0x20,0xed,0x0b,0x13
db 0x23,0xe3,0x2b,0x18,0xdf,0xc1,0xf1,0xa7,0xf5,0xef,0xa0,0x38,0xf1,0xf5,0xdc,0x01
db 0x35,0xf1,0xf5,0xd4,0xf9,0x34,0xf1,0x0f,0xd4,0x01,0x35,0xc9
strs_add:
    call 0x2bf1
    push de
    push bc
    call 0x2bf1
    pop hl
    push hl
    push de
    push bc
    add hl,bc
    db 0x44,0x4d,0xf7
    call 0x2ab2
    pop bc
    pop hl
    db 0x78,0xb1,0x28,0x02,0xed,0xb0,0xc1,0xe1,0x78,0xb1,0x28,0x02,0xed,0xb0,0x2a
    db 0x65,0x5c,0x11,0xfb,0xff
    push hl
    add hl,de
    pop de
    ret
chrs:
    call 0x2dd5
    db 0x38,0x0e,0x20,0x0c
    db 0xf5,0x01,0x01,0x00,0xf7,0xf1,0x12
    call 0x2ab2
    ex de,hl
    ret
report_b:
    rst 0x08
    db 0x0a
val:
    ld hl,(CH_ADD)
    push hl
    ld a,b
    add a,0xe3
    sbc a,a
    push af
    call 0x2bf1
    push de
    inc bc
    rst 0x30
    pop hl
    ld (CH_ADD),de
    push de
    ldir
    db 0xeb,0x2b,0x36,0x0d,0xfd,0xcb,0x01,0xbe
    call 0x24fb
    db 0xdf,0xfe,0x0d,0x20,0x07,0xe1,0xf1,0xfd,0xae,0x01,0xe6,0x40,0xc2,0x8a,0x1c,0x22
    db 0x5d,0x5c,0xfd,0xcb,0x01,0xfe
    call 0x24fb
    pop hl
    db 0x22,0x5d,0x5c,0x18,0xa0,0x01
    db 0x01,0x00,0xf7,0x22,0x5b,0x5c,0xe5,0x2a,0x51,0x5c,0xe5,0x3e,0xff
    call 0x1601
    call 0x2de3
    pop hl
    call 0x1615
    pop de
db 0x2a,0x5b,0x5c,0xa7,0xed,0x52,0x44,0x4d
db 0xcd,0xb2,0x2a
db 0xeb,0xc9
db 0xcd,0x94,0x1e
db 0xfe,0x10,0xd2,0x9f,0x1e,0x2a,0x51,0x5c
db 0xe5
db 0xcd,0x01,0x16
db 0xcd,0xe6,0x15
db 0x01,0x00,0x00,0x30,0x03,0x0c,0xf7,0x12
db 0xcd,0xb2,0x2a
db 0xe1
db 0xcd,0x15,0x16
db 0xc3,0xbf,0x35
db 0xcd,0xf1,0x2b
db 0x78,0xb1,0x28,0x01
db 0x1a,0xc3,0x28,0x2d
db 0xcd,0xf1,0x2b
db 0xc3,0x2b,0x2d,0xd9,0xe5,0x21,0x67,0x5c,0x35
db 0xe1,0x20,0x04,0x23,0xd9,0xc9,0xd9,0x5e,0x7b,0x17,0x9f,0x57,0x19,0xd9,0xc9,0x13
db 0x13,0x1a,0x1b,0x1b,0xa7,0x20,0xef,0xd9,0x23,0xd9,0xc9,0xf1,0xd9,0xe3,0xd9,0xc9
db 0xef,0xc0,0x02,0x31,0xe0,0x05,0x27,0xe0,0x01,0xc0,0x04,0x03,0xe0,0x38,0xc9,0xef
db 0x31,0x36,0x00,0x04,0x3a,0x38,0xc9,0x31,0x3a,0xc0,0x03,0xe0,0x01,0x30,0x00,0x03
db 0xa1,0x03,0x38,0xc9,0xef,0x3d,0x34,0xf1,0x38,0xaa,0x3b,0x29,0x04,0x31,0x27,0xc3
db 0x03,0x31,0x0f,0xa1,0x03,0x88,0x13,0x36,0x58,0x65,0x66,0x9d,0x78,0x65,0x40,0xa2
db 0x60,0x32,0xc9,0xe7,0x21,0xf7,0xaf,0x24,0xeb,0x2f,0xb0,0xb0,0x14,0xee,0x7e,0xbb
db 0x94,0x58,0xf1,0x3a,0x7e,0xf8,0xcf,0xe3,0x38,0xcd,0xd5,0x2d,0x20,0x07,0x38,0x03
db 0x86,0x30,0x09,0xcf,0x05,0x38,0x07,0x96,0x30,0x04,0xed,0x44,0x77,0xc9,0xef,0x02
db 0xa0,0x38,0xc9,0xef,0x3d,0x31,0x37,0x00,0x04,0x38,0xcf,0x09,0xa0,0x02,0x38,0x7e
db 0x36,0x80
db 0xcd,0x28,0x2d
db 0xef,0x34,0x38,0x00,0x03,0x01,0x31,0x34,0xf0,0x4c,0xcc
db 0xcc
db 0xcd,0x03,0x37
db 0x00,0x08,0x01,0xa1,0x03,0x01,0x38,0x34,0xef,0x01,0x34,0xf0
db 0x31,0x72,0x17,0xf8,0x04,0x01,0xa2,0x03,0xa2,0x03,0x31,0x34,0x32,0x20,0x04,0xa2
db 0x03,0x8c,0x11,0xac,0x14,0x09,0x56,0xda,0xa5,0x59,0x30,0xc5,0x5c,0x90,0xaa,0x9e
db 0x70,0x6f,0x61,0xa1,0xcb,0xda,0x96,0xa4,0x31,0x9f,0xb4,0xe7,0xa0,0xfe,0x5c,0xfc
db 0xea,0x1b,0x43,0xca,0x36,0xed,0xa7,0x9c,0x7e,0x5e,0xf0,0x6e,0x23,0x80,0x93,0x04
db 0x0f,0x38,0xc9,0xef,0x3d,0x34,0xee,0x22,0xf9,0x83,0x6e,0x04,0x31,0xa2,0x0f,0x27
db 0x03,0x31,0x0f,0x31,0x0f,0x31,0x2a,0xa1,0x03,0x31,0x37,0xc0,0x00,0x04,0x02,0x38
db 0xc9,0xa1,0x03,0x01,0x36,0x00,0x02,0x1b,0x38,0xc9,0xef,0x39,0x2a,0xa1,0x03,0xe0
db 0x00,0x06,0x1b,0x33,0x03,0xef,0x39,0x31,0x31,0x04,0x31,0x0f,0xa1,0x03,0x86,0x14
db 0xe6,0x5c,0x1f,0x0b,0xa3,0x8f,0x38,0xee,0xe9,0x15,0x63,0xbb,0x23,0xee,0x92,0x0d
db 0xcd,0xed,0xf1,0x23,0x5d,0x1b,0xea,0x04,0x38,0xc9,0xef,0x31,0x1f,0x01,0x20,0x05
db 0x38,0xc9,0xcd,0x97,0x32,0x7e,0xfe,0x81,0x38,0x0e,0xef,0xa1,0x1b,0x01,0x05,0x31
db 0x36,0xa3,0x01,0x00,0x06,0x1b,0x33,0x03,0xef,0xa0,0x01,0x31,0x31,0x04,0x31,0x0f
db 0xa1,0x03,0x8c,0x10,0xb2,0x13,0x0e,0x55,0xe4,0x8d,0x58,0x39,0xbc,0x5b,0x98,0xfd
db 0x9e,0x00,0x36,0x75,0xa0,0xdb,0xe8,0xb4,0x63,0x42,0xc4,0xe6,0xb5,0x09,0x36,0xbe
db 0xe9,0x36,0x73,0x1b,0x5d,0xec,0xd8,0xde,0x63,0xbe,0xf0,0x61,0xa1,0xb3,0x0c,0x04
db 0x0f,0x38,0xc9,0xef,0x31,0x31,0x04,0xa1,0x03,0x1b,0x28,0xa1,0x0f,0x05,0x24,0x31
db 0x0f,0x38,0xc9,0xef,0x22,0xa3,0x03,0x1b,0x38,0xc9,0xef,0x31,0x30,0x00,0x1e,0xa2
db 0x38,0xef,0x01,0x31,0x30,0x00,0x07,0x25,0x04,0x38,0xc3,0xc4,0x36,0x02,0x31,0x30
db 0x00,0x09,0xa0,0x01,0x37,0x00,0x06,0xa1,0x01,0x05,0x02,0xa1,0x38,0xc9,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
db 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x10,0x10,0x10,0x10,0x00,0x10,0x00
db 0x00,0x24,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x24,0x7e,0x24,0x24,0x7e,0x24,0x00
db 0x00,0x08,0x3e,0x28,0x3e,0x0a,0x3e,0x08,0x00,0x62,0x64,0x08,0x10,0x26,0x46,0x00
db 0x00,0x10,0x28,0x10,0x2a,0x44,0x3a,0x00,0x00,0x08,0x10,0x00,0x00,0x00,0x00,0x00
db 0x00,0x04,0x08,0x08,0x08,0x08,0x04,0x00,0x00,0x20,0x10,0x10,0x10,0x10,0x20,0x00
db 0x00,0x00,0x14,0x08,0x3e,0x08,0x14,0x00,0x00,0x00,0x08,0x08,0x3e,0x08,0x08,0x00
db 0x00,0x00,0x00,0x00,0x00,0x08,0x08,0x10,0x00,0x00,0x00,0x00,0x3e,0x00,0x00,0x00
db 0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,0x00,0x00,0x02,0x04,0x08,0x10,0x20,0x00
db 0x00,0x3c,0x46,0x4a,0x52,0x62,0x3c,0x00,0x00,0x18,0x28,0x08,0x08,0x08,0x3e,0x00
db 0x00,0x3c,0x42,0x02,0x3c,0x40,0x7e,0x00,0x00,0x3c,0x42,0x0c,0x02,0x42,0x3c,0x00
db 0x00,0x08,0x18,0x28,0x48,0x7e,0x08,0x00,0x00,0x7e,0x40,0x7c,0x02,0x42,0x3c,0x00
db 0x00,0x3c,0x40,0x7c,0x42,0x42,0x3c,0x00,0x00,0x7e,0x02,0x04,0x08,0x10,0x10,0x00
db 0x00,0x3c,0x42,0x3c,0x42,0x42,0x3c,0x00,0x00,0x3c,0x42,0x42,0x3e,0x02,0x3c,0x00
db 0x00,0x00,0x00,0x10,0x00,0x00,0x10,0x00,0x00,0x00,0x10,0x00,0x00,0x10,0x10,0x20
db 0x00,0x00,0x04,0x08,0x10,0x08,0x04,0x00,0x00,0x00,0x00,0x3e,0x00,0x3e,0x00,0x00
db 0x00,0x00,0x10,0x08,0x04,0x08,0x10,0x00,0x00,0x3c,0x42,0x04,0x08,0x00,0x08,0x00
db 0x00,0x3c,0x4a,0x56,0x5e,0x40,0x3c,0x00,0x00,0x3c,0x42,0x42,0x7e,0x42,0x42,0x00
db 0x00,0x7c,0x42,0x7c,0x42,0x42,0x7c,0x00,0x00,0x3c,0x42,0x40,0x40,0x42,0x3c,0x00
db 0x00,0x78,0x44,0x42,0x42,0x44,0x78,0x00,0x00,0x7e,0x40,0x7c,0x40,0x40,0x7e,0x00
db 0x00,0x7e,0x40,0x7c,0x40,0x40,0x40,0x00,0x00,0x3c,0x42,0x40,0x4e,0x42,0x3c,0x00
db 0x00,0x42,0x42,0x7e,0x42,0x42,0x42,0x00,0x00,0x3e,0x08,0x08,0x08,0x08,0x3e,0x00
db 0x00,0x02,0x02,0x02,0x42,0x42,0x3c,0x00,0x00,0x44,0x48,0x70,0x48,0x44,0x42,0x00
db 0x00,0x40,0x40,0x40,0x40,0x40,0x7e,0x00,0x00,0x42,0x66,0x5a,0x42,0x42,0x42,0x00
db 0x00,0x42,0x62,0x52,0x4a,0x46,0x42,0x00,0x00,0x3c,0x42,0x42,0x42,0x42,0x3c,0x00
db 0x00,0x7c,0x42,0x42,0x7c,0x40,0x40,0x00,0x00,0x3c,0x42,0x42,0x52,0x4a,0x3c,0x00
db 0x00,0x7c,0x42,0x42,0x7c,0x44,0x42,0x00,0x00,0x3c,0x40,0x3c,0x02,0x42,0x3c,0x00
db 0x00,0xfe,0x10,0x10,0x10,0x10,0x10,0x00,0x00,0x42,0x42,0x42,0x42,0x42,0x3c,0x00
db 0x00,0x42,0x42,0x42,0x42,0x24,0x18,0x00,0x00,0x42,0x42,0x42,0x42,0x5a,0x24,0x00
db 0x00,0x42,0x24,0x18,0x18,0x24,0x42,0x00,0x00,0x82,0x44,0x28,0x10,0x10,0x10,0x00
db 0x00,0x7e,0x04,0x08,0x10,0x20,0x7e,0x00,0x00,0x0e,0x08,0x08,0x08,0x08,0x0e,0x00
db 0x00,0x00,0x40,0x20,0x10,0x08,0x04,0x00,0x00,0x70,0x10,0x10,0x10,0x10,0x70,0x00
db 0x00,0x10,0x38,0x54,0x10,0x10,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xff
db 0x00,0x1c,0x22,0x78,0x20,0x20,0x7e,0x00,0x00,0x00,0x38,0x04,0x3c,0x44,0x3c,0x00
db 0x00,0x20,0x20,0x3c,0x22,0x22,0x3c,0x00,0x00,0x00,0x1c,0x20,0x20,0x20,0x1c,0x00
db 0x00,0x04,0x04,0x3c,0x44,0x44,0x3c,0x00,0x00,0x00,0x38,0x44,0x78,0x40,0x3c,0x00
db 0x00,0x0c,0x10,0x18,0x10,0x10,0x10,0x00,0x00,0x00,0x3c,0x44,0x44,0x3c,0x04,0x38
db 0x00,0x40,0x40,0x78,0x44,0x44,0x44,0x00,0x00,0x10,0x00,0x30,0x10,0x10,0x38,0x00
db 0x00,0x04,0x00,0x04,0x04,0x04,0x24,0x18,0x00,0x20,0x28,0x30,0x30,0x28,0x24,0x00
db 0x00,0x10,0x10,0x10,0x10,0x10,0x0c,0x00,0x00,0x00,0x68,0x54,0x54,0x54,0x54,0x00
db 0x00,0x00,0x78,0x44,0x44,0x44,0x44,0x00,0x00,0x00,0x38,0x44,0x44,0x44,0x38,0x00
db 0x00,0x00,0x78,0x44,0x44,0x78,0x40,0x40,0x00,0x00,0x3c,0x44,0x44,0x3c,0x04,0x06
db 0x00,0x00,0x1c,0x20,0x20,0x20,0x20,0x00,0x00,0x00,0x38,0x40,0x38,0x04,0x78,0x00
db 0x00,0x10,0x38,0x10,0x10,0x10,0x0c,0x00,0x00,0x00,0x44,0x44,0x44,0x44,0x38,0x00
db 0x00,0x00,0x44,0x44,0x28,0x28,0x10,0x00,0x00,0x00,0x44,0x54,0x54,0x54,0x28,0x00
db 0x00,0x00,0x44,0x28,0x10,0x28,0x44,0x00,0x00,0x00,0x44,0x44,0x44,0x3c,0x04,0x38
db 0x00,0x00,0x7c,0x08,0x10,0x20,0x7c,0x00,0x00,0x0e,0x08,0x30,0x08,0x08,0x0e,0x00
db 0x00,0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x00,0x70,0x10,0x0c,0x10,0x10,0x70,0x00
db 0x00,0x14,0x28,0x00,0x00,0x00,0x00,0x00,0x3c,0x42,0x99,0xa1,0xa1,0x99,0x42,0x3c

